/**
 * ptAnywhere - User friendly interface to use PT Anywhere.
 * @version v2.0.2
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
angular.module("ptAnywhere",[]),angular.module("ptAnywhere.templates",[]),angular.module("ptAnywhere.locale",[]).config(["$injector","$provide",function(e,n){$log=console;var t="locale_en";try{t=e.get("use")}catch(o){$log.debug("Locales to use were not defined: using default ones.")}var i;try{i=e.get(t),n.constant("locale",i),$log.debug("Locales loaded from: "+t)}catch(o){$log.error("Locales to use could not be loaded from constant:"+t+".")}}]),angular.module("ptAnywhere.locale").constant("locale_en",{loading:"Loading...",loadingInfo:"Loading info...",name:"Name",manipulationMenu:{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add device",addEdge:"Connect devices",editNode:"Edit device",addDescription:"Click in an empty space to place a new device.",edgeDescription:"Click on a node and drag the edge to another element to connect them.",editEdge:"Edit Edge",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited.",openConsole:"Open console"},session:{creating:{title:"Creating new session..."},notFound:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="#/">Click here</a> to initiate a new one.</p>'},unavailable:{title:"Unavailable PT instances",content:'<p>Sorry, there are <b>no Packet Tracer instances available</b> right now to initiate a session.</p><p>Please, wait a little bit and <a href="#/">try again</a>.</p>'},genericError:{title:"Error creating PT instance",content:'<p>Sorry, there was an error initiating the session.</p><p>Please, wait a little bit and <a href="#/">try again</a>.</p>'}},network:{loading:"Loading network...",attempt:"Attempt",errorUnavailable:"Instance not yet available",errorTimeout:"Timeout",errorUnknown:"Unknown error",notLoaded:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="?session">Click here</a> to initiate a new one.</p>'}},deleteDevice:{status:"Deleting device...",error:"The device could not be deleted."},deleteLink:{status:"Deleting link...",error:"The link could not be deleted."},creationMenu:{legend:"To create a new device, drag it to the network map"},creationDialog:{title:"Create new device",type:"Device type"},linkDialog:{title:"Connect two devices",select:"Please select which ports to connect...",error:{loading:"Problem loading the interfaces for this device. Please, try it again.",unavailability:"One of the devices you are trying to link has no available interfaces.",creation:"Sorry, something went wrong during the link creation."}},modificationDialog:{title:"Modify device",globalSettings:"Global Settings",interfaces:"Interfaces",defaultGW:"Default gateway",ipAddress:"IP address",subnetMask:"Subnet mask",noSettings:"No settings can be specified for this type of interface."},commandLineDialog:{title:"Command line"}}),angular.module("ptAnywhere.widget",["ngRoute","ui.bootstrap","luegg.directives","ptAnywhere.locale","ptAnywhere.widget.configuration","ptAnywhere.api.http","ptAnywhere.widget.console","ptAnywhere.widget.create","ptAnywhere.widget.link","ptAnywhere.widget.map","ptAnywhere.widget.update","ptAnywhere.templates"]).constant("redirectionPath","/not-found").config(["$routeProvider","redirectionPath","locale",function(e,n,t){function o(e){return'<div class="row message"><div class="col-md-8 col-md-offset-2 text-center"><h1>'+e.title+"</h1>"+("content"in e?e.content:"")+"</div></div>"}e.when("/",{template:o(t.session.creating),controller:"SessionCreatorController"}).when("/session-unavailable",{template:o(t.session.unavailable)}).when("/session-error",{template:o(t.session.genericError)}).when(n,{template:o(t.session.notFound)}).when("/loading/:id",{templateUrl:"loading.html"}).when("/s/:id",{templateUrl:"main-widget.html"}).otherwise("/")}]).config(["$httpProvider",function(e){e.interceptors.push("HttpErrorInterceptor")}]).run(["HttpErrorInterceptor","redirectionPath",function(e,n){e.setRedirectionPath(n)}]),angular.module("ptAnywhere.widget").controller("SessionCreatorController",["$location","HttpApiService","fileToOpen",function(e,n,t){n.createSession(t,null).then(function(n){e.path("/loading/"+n)},function(n){503===n.status?e.path("/session-unavailable"):e.path("/session-error")})}]),angular.module("ptAnywhere.widget").controller("SessionLoadingController",["$location","$routeParams","HttpApiService","NetworkMapData","imagesUrl","locale",function(e,n,t,o,i,a){var r=this;r.path=i,r.loading=a.network.loading,r.message="",t.startSession(n.id),t.getNetwork(function(e){r.message=e}).then(function(t){o.load(t),e.path("/s/"+n.id)},function(n){e.path("/not-found")})}]),angular.module("ptAnywhere.widget").controller("WidgetController",["$q","$log","$location","$routeParams","$uibModal","NetworkMapData","HttpApiService",function(e,n,t,o,i,a,r){var l,d=this;a.isLoaded()?(d.openConsole=function(e){var n=e;l=i.open({templateUrl:"cmd-dialog.html",controller:["$location","$scope","$uibModalInstance","locale","redirectionPath","wsUrl",function(e,n,t,o,i,a){var r=this;r.title=o.commandLineDialog.title,n.close=function(){t.dismiss("close button")},n.onDisconnect=function(n){1e3!==n.code&&(e.path(i),t.dismiss("websocket closed"))},n.endpoint=a}],controllerAs:"modal",resolve:{wsUrl:function(){return n}},windowClass:"terminal-dialog"})},d.onAddDevice=function(e,n){l=i.open({templateUrl:"default-dialog.html",controller:"CreationController",resolve:{position:function(){return[e,n]}}}),l.result.then(function(e){a.addNode(e)})},d.onAddLink=function(e,n){l=i.open({templateUrl:"default-dialog.html",controller:"LinkController",resolve:{fromDevice:function(){return e},toDevice:function(){return n}}}),l.result.then(function(t){a.connect(e,n,t.newLink.id,t.newLink.url,t.fromPortName,t.toPortName)})},d.onEditDevice=function(e){l=i.open({templateUrl:"default-dialog.html",controller:"UpdateController",resolve:{device:function(){return e}}}),l.result.then(function(e){null!==e&&a.updateNode(e)})},d.onDeleteDevice=function(t){return e(function(e,o){r.removeDevice(t).then(function(){e()},function(e){n.error("Device removal.",e),o()})})},d.onDeleteLink=function(t){return e(function(e,o){r.removeLink(t).then(function(){e()},function(){n.error("Something went wrong in the link removal."),o()})})},d.onDrop=function(t){return e(function(e,o){var i=d.getNetworkCoordinates(t.x,t.y);t.x=i.x,t.y=i.y,r.addDevice(t).then(function(n){a.addNode(n),e()},function(e){n.error("Device creation",e),o()})})}):t.path("/loading/"+o.id)}]),angular.module("ptAnywhere.api.http",[]).config(["$injector","$provide",function(e,n){var t=console,o="url",i="";try{e.get(o)}catch(a){t.log('Setting default value for non existing "'+o+'" constant: "'+i+'"'),n.constant(o,i)}}]),angular.module("ptAnywhere.api.http").factory("HttpApiService",["$http","url","HttpRetryService",function(e,n,t){var o="",i={timeout:2e3},a={timeout:5e3};return{createSession:function(t,a){var r={fileUrl:t};return null!==a&&(r.sameUserAsInSession=a),e.post(n+"/sessions",r,i).then(function(e){o=e.data;var n=e.data.split("/"),t=n[n.length-1];return t})},startSession:function(e){o=n+"/sessions/"+e},getNetwork:function(n){var i=function(e){return e.data};return t.setSuccess(i),t.setExplainer(n),e.get(o+"/network",a).then(i,t.responseError)},addDevice:function(n){return e.post(o+"/devices",n,i).then(function(e){return e.data})},removeDevice:function(n){return e["delete"](n.url,i)},modifyDevice:function(n,t,o){var a={label:t};return""!==o&&(a.defaultGateway=o),e.put(n.url,a,i).then(function(e){var n=e.data;return n.defaultGateway=o,n})},modifyPort:function(n,t,o){var a={portIpAddress:t,portSubnetMask:o};return e.put(n,a,i).then(function(e){return e.data})},getAllPorts:function(n){return e.get(n.url+"ports",i).then(function(e){return e.data})},getAvailablePorts:function(n){return e.get(n.url+"ports?free=true",i).then(function(e){return e.data})},createLink:function(n,t){var o={toPort:t};return e.post(n+"link",o,i).then(function(e){return e.data})},removeLink:function(n){return e.get(n.url,i).then(function(n){return e["delete"](n.data.endpoints[0]+"link")})}}}]),angular.module("ptAnywhere.api.http").factory("HttpErrorInterceptor",["$q","$location",function(e,n){var t;return{setRedirectionPath:function(e){t=e},responseError:function(o){return 410===o.status&&n.path(t),e.reject(o)}}}]),angular.module("ptAnywhere.api.http").factory("HttpRetryService",["$http","$q","$timeout","$location","locale",function(e,n,t,o,i){function a(n,o){return t(function(){return e(n).then(s,l)},o)}function r(e){var n;switch(e){case 503:n=i.network.errorUnavailable;break;case 0:n=i.network.errorTimeout;break;default:n=i.network.errorUnknown}return n+". "+i.network.attempt+" "+d+"/"+c+"."}function l(e){if((0===e.status||503===e.status)&&d<c){var t=0===e.status?0:2e3;return d++,u(r(e.status)),a(e.config,t)}return n.reject(e)}var d=0,c=5,s=null,u=null;return{responseError:l,setSuccess:function(e){s=e},setExplainer:function(e){u=e}}}]),angular.module("ptAnywhere.api.websocket",["ngWebSocket"]),angular.module("ptAnywhere.api.websocket").factory("WebsocketApiService",["$websocket",function(e){function n(e){e.onOpen(i.connected),e.onClose(i.disconnected),e.onError(i.error),e.onMessage(function(e){if("object"==typeof e&&"data"in e){var n=JSON.parse(e.data);n.hasOwnProperty("prompt")?i.output(n.prompt):n.hasOwnProperty("out")?i.output(n.out):n.hasOwnProperty("history")&&i.history(n.history)}})}var t,o=function(){},i={connected:o,disconnected:o,error:o,output:o};return{onConnect:function(e){return i.connected=e,this},onDisconnect:function(e){return i.disconnected=e,this},onOutput:function(e){return i.output=e,this},onCommandReplace:function(e){return i.replace=e,this},onHistory:function(e){return i.history=e,this},onError:function(e){return i.error=e,this},start:function(o){t=e(o),n(t)},stop:function(){t.close()},execute:function(e){t.send(e)},getHistory:function(){t.send("/getHistory")}}}]),angular.module("ptAnywhere.widget.configuration",[]).config(["$injector","$provide",function(e,n){var t={imagesUrl:""};for(var o in t)try{e.get(o)}catch(i){var a=t[o];$log.log('Setting default value for non existing "'+o+'" constant: "'+a+'"'),n.constant(o,a)}}]),angular.module("ptAnywhere.widget.console",["ptAnywhere.api.websocket","ptAnywhere.templates"]),angular.module("ptAnywhere.widget.console").controller("CommandLineController",["$log","$scope","$injector","WebsocketApiService","HistoryService",function(e,n,t,o,i){var a=this;a.onDisconnect="onDisconnect"in n?n.onDisconnect:null,a.endpoint="endpoint"in n?n.endpoint:null,null===a.endpoint&&(a.endpoint=t.get("endpoint")),a.disabled=!0,a.output=[],a.lastLine={prompt:"",command:""},a.cachedCommand=null,a.showingCached=!1,i.markToUpdate(),a.isShowingCached=function(){return a.showingCached},a.clearCached=function(){a.cachedCommand=null,a.showingCached=!1},a.isCaching=function(){return null!==a.cachedCommand},a.updateCached=function(){a.cachedCommand=a.lastLine.command},a.send=function(e){o.execute(e),a.lastLine.command="",a.clearCached(),i.markToUpdate()},a.onPreviousCommand=function(){if(i.needsToBeUpdated())o.getHistory();else{a.isCaching()&&!a.isShowingCached()||a.updateCached();var e=i.getPreviousCommand();null!==e&&(a.lastLine.command=e,a.showingCached=!1)}},a.onNextCommand=function(){if(!i.needsToBeUpdated()){var e=i.getNextCommand();null!==e?(a.lastLine.command=e,a.showingCached=!1):a.isCaching()&&(a.lastLine.command=a.cachedCommand,a.showingCached=!0)}},o.onConnect(function(){e.debug("WebSocket connection opened."),a.disabled=!1}).onOutput(function(e){var t=e.split("\n");if(t.length>1)for(var o=0;o<t.length-1;o++){if(0===o){var i=a.lastLine.prompt;"--More--"!==i.trim()&&""!==i&&a.output.push(i),a.lastLine.prompt=""}a.output.push(t[o])}a.lastLine.prompt+=t[t.length-1],n.$apply()}).onCommandReplace(function(e){null!==e&&(a.lastLine.command=e)}).onHistory(function(e){i.update(e,function(e){a.lastLine.command=e})}).onError(function(n){e.error("WebSocket error",n),a.disabled=!0,a.lastLine.prompt=null,a.output=["WebSocket error"]}).onDisconnect(function(n){e.warn("WebSocket connection closed.",n),null===a.onDisconnect?(a.disabled=!0,a.lastLine.prompt=null,a.output=["WebSocket closed"]):a.onDisconnect(n)}),o.start(a.endpoint),n.$on("$destroy",function(){o.stop()})}]),angular.module("ptAnywhere.widget.console").directive("commandline",["$log",function(e){function n(n){if("undefined"==typeof n.key)switch(n.keyCode){case 9:n.key="Tab";break;case 13:n.key="Enter";break;case 38:n.key="ArrowUp";break;case 40:n.key="ArrowDown";break;default:e.error("The key could not be ")}}return{restrict:"C",scope:{disabled:"=",output:"=",input:"=",sendCommand:"&",onPrevious:"&",onNext:"&"},templateUrl:"commandline.html",link:function(e,t,o){var i=$("div.interactive input",t);i.keydown(function(t){if(n(t),"Enter"===t.key||"Tab"===t.key){var o=e.input.command;"Tab"===t.key&&(t.preventDefault(),o+="\t"),e.sendCommand({command:o})}}),i.keyup(function(t){if(n(t),"ArrowUp"===t.key)e.$apply(e.onPrevious);else if("ArrowDown"===t.key)e.$apply(e.onNext);else{var o=e.input.command.slice(-1);"?"===o&&e.sendCommand({command:e.input.command})}}),e.focusOnInput=function(){i.focus()}}}}]),angular.module("ptAnywhere.widget.console").factory("HistoryService",[function(){var e=null,n=0;return{needsToBeUpdated:function(){return null===e},markToUpdate:function(){e=null},update:function(t,o){e=t,n=e.length,o(this.getPreviousCommand())},getPreviousCommand:function(){return this.needsToBeUpdated()?null:0===n||0===e.length?null:e[--n]},getNextCommand:function(){return this.needsToBeUpdated()?null:(n<e.length&&n++,n===e.length?null:e[n])},_moveIteratorToTheBeginning:function(){n=0}}}]),angular.module("ptAnywhere.widget.create",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http","ptAnywhere.widget.configuration"]),angular.module("ptAnywhere.widget.create").controller("CreationController",["$log","$scope","$uibModalInstance","locale","HttpApiService","position",function(e,n,t,o,i,a){n.submitError=null,n.locale=o,n.modal={id:"creationDialog",title:o.creationDialog.title,bodyTemplate:"creation-dialog-body.html",hasSubmit:!0},n.deviceTypes=[{value:"cloud",label:"Cloud"},{value:"router",label:"Router"},{value:"switch",label:"Switch"},{value:"pc",label:"PC"}],n.newDevice={name:"",type:n.deviceTypes[0]},n.submit=function(){var o={group:n.newDevice.type.value,x:a[0],y:a[1]};""!==n.newDevice.name&&(o.label=n.newDevice.name),n.submitError=null,i.addDevice(o).then(function(e){t.close(e)},function(t){var o=t.status===-1?"timeout":t.statusText;n.submitError="Device could not be created ("+o+").",e.error("Device creation",t)})},n.close=function(){t.dismiss("cancel")}}]),angular.module("ptAnywhere.widget.create").directive("draggableDevice",["imagesUrl",function(e){function n(e){e.originalPosition={left:e.draggedSelector.css("left"),top:e.draggedSelector.css("top")},e.draggedSelector.draggable({helper:"clone",opacity:.4,start:function(n,t){e.draggedSelector.css({opacity:"0.7"})},stop:function(n,r){if(t(r.helper,e.dragToSelector)){var l=i(r),d=a(e.type,r.offset);e.onDrop({device:d})["finally"](function(){o(e),l.remove()})}else o(e)}})}function t(e,n){var t=n.offset().left,o=n.offset().top,i=n.outerHeight(!0),a=n.outerWidth(!0),r=o+i,l=t+a,d=e.offset().left,c=e.offset().top,s=e.outerHeight(!0),u=e.outerWidth(!0),p=c+s,f=d+u;return!(r<c||o>p||l<d||t>f)}function o(e){e.draggedSelector.animate({opacity:"1"},1e3,function(){e.draggedSelector.css({left:e.originalPosition.left,top:e.originalPosition.top})})}function i(e){var n=$('<img alt="Temporary image" src="'+e.helper.attr("src")+'">');n.css("width",e.helper.css("width"));var t=$('<div class="text-in-image"><span>Creating...</span></div>');return t.prepend(n),$("body").append(t),t.css({position:"absolute",left:e.offset.left,top:e.offset.top}),t}function a(e,n){var t=n.left,o=n.top;return{group:e,x:t,y:o}}return{restrict:"C",scope:{alt:"@",src:"@",dragTo:"@",type:"@",onDrop:"&"},template:'<img class="ui-draggable ui-draggable-handle" alt="{{ alt }}" ng-src="{{ path }}" />',link:function(t,o,i){t.path=e+"/"+t.src,t.draggedSelector=$("img",o),t.dragToSelector=$(t.dragTo),n(t)}}}]),angular.module("ptAnywhere.widget.link",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http"]),angular.module("ptAnywhere.widget.link").controller("LinkController",["$log","$scope","$q","$uibModalInstance","locale","HttpApiService","fromDevice","toDevice",function(e,n,t,o,i,a,r,l){var d=this;n.fromDeviceName=r.label,n.toDeviceName=l.label,n.fromInterfaces=null,n.toInterfaces=null,n.submitError=null,n.loadError=null,n.locale=i,n.modal={id:"linkDialog",title:i.linkDialog.title,bodyTemplate:"link-dialog-body.html",hasSubmit:!1},n.selected={fromIface:null,toIface:null},d._load=function(){if(null!==r&&null!==l){var i=[a.getAvailablePorts(r),a.getAvailablePorts(l)];t.all(i).then(function(e){n.fromInterfaces=e[0],n.toInterfaces=e[1],n.emptyInterfaces()||(n.selected.fromIface=n.fromInterfaces[0],n.selected.toIface=n.toInterfaces[0],n.modal.hasSubmit=!0)},function(t){e.error("Interfaces to be linked could not be loaded.",t),410===t.status?o.dismiss("cancel"):n.loadError="(error code: "+t.status+")"})}},n.isLoadingInterfaces=function(){return null===n.fromInterfaces&&null===n.toInterfaces},n.emptyInterfaces=function(){return 0===n.fromInterfaces.length||0===n.toInterfaces.length},n.availableInterfaces=function(){return!n.isLoadingInterfaces()&&!n.emptyInterfaces()},n.submit=function(){var t=n.selected.fromIface,i=n.selected.toIface;n.submitError=null,a.createLink(t.url,i.url).then(function(e){var n={newLink:e,fromPortName:t.portName,toPortName:i.portName};o.close(n)},function(t){n.submitError="Link could not be created ("+t.statusText+").",e.error("Link creation",t)})},n.close=function(){o.dismiss("cancel")},d._load()}]),angular.module("ptAnywhere.widget.map",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http","ptAnywhere.widget.configuration"]),angular.module("ptAnywhere.widget.map").directive("networkMap",["$timeout","locale","NetworkMapData","imagesUrl",function(e,n,t,o){function i(e,o,i,a){var r={nodes:t.getNodes(),edges:t.getEdges()},l={nodes:{physics:!1,font:"14px verdana black"},edges:{width:3,selectionWidth:1.4,color:{color:"#606060",highlight:"#000000",hover:"#000000"}},groups:{cloudDevice:{shape:"image",image:i+"/cloud.png",size:50},routerDevice:{shape:"image",image:i+"/router_cropped.png",size:45},switchDevice:{shape:"image",image:i+"/switch_cropped.png",size:35},pcDevice:{shape:"image",image:i+"/pc_cropped.png",size:45}},manipulation:g(e,a),locale:"ptAnywhere",locales:{ptAnywhere:n.manipulationMenu}};return new vis.Network(o,r,l)}function a(){var e=m.getSelection();return 1!==e.nodes.length?(console.log("Only one device is supposed to be selected. Instead "+e.nodes.length+" are selected."),null):t.getNode(e.nodes[0])}function r(e){return 0===e.nodes.length&&1===e.edges.length}function l(e){return e.label.indexOf("\n")!==-1}function d(e){var n=t.getNode(e.from),o=t.getNode(e.to);l(n)||(n.label=n.label+"\n("+e.fromLabel+")",t.updateNode(n)),l(o)||(o.label=o.label+"\n("+e.toLabel+")",t.updateNode(o))}function c(e){var n=t.getNode(e.from),o=t.getNode(e.to);l(n)&&(n.label=n.label.split("\n")[0],t.updateNode(n)),l(o)&&(o.label=o.label.split("\n")[0],t.updateNode(o))}function s(e){for(var n=0;n<e.edges.length;n++)c(t.getEdge(e.edges[n]))}function u(e,n){return m.DOMtoCanvas({x:e,y:n})}function p(e){$("div.vis-manipulation").append('<div class="statusMsg vis-button vis-none"><div class="vis-label text-warning">'+e+"</p></div>"),$("div.statusMsg").fadeIn("slow")}function f(e){$("div.vis-manipulation").append('<div class="statusMsg vis-button vis-none"><div class="vis-label text-danger">'+e+"</p></div>"),$("div.statusMsg").fadeIn("slow").delay(2e3).fadeOut("slow")}function g(e,n){var o=function(e,n){},i=o,a=o,r=o,l=o,d=o;return"onAddDevice"in e&&(i=function(n,t){e.onAddDevice({x:n.x,y:n.y})}),"onAddLink"in e&&(a=function(n,o){var i=t.getNode(n.from),a=t.getNode(n.to);e.onAddLink({fromDevice:i,toDevice:a})}),"onEditDevice"in e&&(r=function(n,o){e.onEditDevice({device:t.getNode(n.id)}),o(n)}),"onDeleteDevice"in e&&(l=function(o,i){p(n.deleteDevice.status),e.onDeleteDevice({device:t.getNode(o.nodes[0])}).then(function(){i(o)},function(){i([]),f(n.deleteDevice.error)})}),"onDeleteLink"in e&&(d=function(o,i){p(n.deleteLink.status);var a=t.getEdge(o.edges[0]);c(a),e.onDeleteLink({link:a}).then(function(){i(o)},function(){i([]),f(n.deleteLink.error)})}),{initiallyActive:!0,addNode:i,addEdge:a,editNode:r,editEdge:!1,deleteNode:l,deleteEdge:d}}var m;return{restrict:"C",scope:{onOpenConsole:"&",onAddDevice:"&",onAddLink:"&",onEditDevice:"&",onDeleteDevice:"&",onDeleteLink:"&",adaptCoordinates:"="},template:'<div class="map"></div>',link:function(l,c,p){var f=c.find("div")[0];if(m=i(l,f,o,n),l.$on("$destroy",function(){m.destroy()}),l.adaptCoordinates=u,m.on("selectNode",function(e){s(e)}),m.on("selectEdge",function(e){if(r(e)){var n=t.getEdge(e.edges[0]);d(n)}}),m.on("deselectEdge",function(e){r(e.previousSelection)&&s(e.previousSelection)}),"onOpenConsole"in l){var g=function(){console.log("open console");var e=a();null!==e&&l.onOpenConsole({endpoint:e.consoleEndpoint})};m.on("doubleClick",g);var v=null,h=function(t){1===t.nodes.length&&e(function(){null!==v&&v.remove(),v=$('<div class="vis-separator-line"></div><div class="vis-button vis-console"><div class="vis-label">'+n.manipulationMenu.openConsole+"</div></div>"),$("div.vis-manipulation",c).append(v),$("div.vis-console",c).click(g)},1)};m.on("deselectNode",function(e){null!==v&&1!==e.nodes.length&&1===e.previousSelection.nodes.length&&(v.remove(),v=null)}),m.on("selectNode",h),m.on("doubleClick",h)}}}}]),angular.module("ptAnywhere.widget.map").factory("NetworkMapData",[function(){var e=!1,n=new vis.DataSet,t=new vis.DataSet;return{load:function(o){e=!0,null!==o.devices&&(n.clear(),n.add(o.devices)),null!==o.edges&&(t.clear(),t.add(o.edges))},isLoaded:function(){return e},getNode:function(e){return n.get(e)},updateNode:function(e){n.update(e)},addNode:function(e){return n.add(e)},getNodes:function(){return n},getEdge:function(e){return t.get(e)},getEdges:function(){return t},connect:function(e,n,o,i,a,r){var l;l="string"==typeof e&&"string"==typeof n?{from:getByName(e).id,to:getByName(n).id}:{from:e.id,to:n.id},void 0!==o&&(l.id=o),void 0!==i&&(l.url=i),void 0!==a&&(l.fromLabel=a),void 0!==r&&(l.toLabel=r),t.add(l)}}}]),angular.module("ptAnywhere.widget.update",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http"]),angular.module("ptAnywhere.widget").directive("inputIpAddress",[function(){return{restrict:"C",transclude:!0,scope:{id:"@",name:"@",formController:"=",value:"=ngModel"},templateUrl:"input-ipaddress.html",link:function(e,n,t){e.ipAddrPattern=/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/}}}]),angular.module("ptAnywhere.widget.update").controller("UpdateController",["$log","$scope","$q","$uibModalInstance","locale","HttpApiService","device",function(e,n,t,o,i,a,r){var l=this;n.submitError=null,n.interfaces=null,n["interface"]={selected:null,ipAddr:null,subnet:null},n.locale=i,n.modal={id:"modification-dialog",title:i.modificationDialog.title,bodyTemplate:"update-dialog-body.html",hasSubmit:!0},n.device={name:r.label,defaultGateway:"defaultGateway"in r?r.defaultGateway:null},n.$watch("interfaces",function(e,t){null!==e&&(n["interface"].selected=e[0])}),n.$watch("interface.selected",function(e,t){e&&"portIpAddress"in e&&"portSubnetMask"in e?(n["interface"].ipAddr=e.portIpAddress,n["interface"].subnet=e.portSubnetMask):(n["interface"].ipAddr=null,n["interface"].subnet=null)}),l._load=function(){a.getAllPorts(r).then(function(e){n.interfaces=e},function(n){e.error("Ports for the device "+r.id+" could not be loaded.",n),o.dismiss("cancel")})},l._haveGlobalSettingsChanged=function(){return n.device.name!=r.label||"defaultGateway"in r&&n.device.defaultGateway!=r.defaultGateway},l._hasInterfaceChanged=function(){return null!==n["interface"].ipAddr&&null!==n["interface"].subnet&&(n["interface"].ipAddr!=n["interface"].selected.portIpAddress||n["interface"].subnet!=n["interface"].selected.portSubnetMask)},n.submit=function(){var i;i=l._haveGlobalSettingsChanged()?a.modifyDevice(r,n.device.name,n.device.defaultGateway).then(function(e){return e},function(e){return n.submitError="Global settings could not be modified.",e}):t.resolve(null),l._hasInterfaceChanged()&&(i=i.then(function(e){return a.modifyPort(n["interface"].selected.url,n["interface"].ipAddr,n["interface"].subnet).then(function(n){return e},function(e){return n.submitError="Interface details could not be modified.",e})})),i.then(function(e){o.close(e)},function(n){e.error("Update(s) could not be performed.",n)})},n.close=function(){o.dismiss("cancel")},l._load()}]),angular.module("ptAnywhere.templates").run(["$templateCache",function(e){e.put("cmd-dialog.html",'<div class="modal-header">\n    <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n    <h4 class="modal-title" id="cmdModal">\n        <span class="glyphicon glyphicon-console" style="margin-right:10px" aria-hidden="true"></span>\n        {{ modal.title }}\n    </h4>\n</div>\n<div class="modal-body">\n    <div scroll-glue>\n        <!-- Uses variables form parent controller: endpoint and onDisconnect-->\n        <div ng-controller="CommandLineController as cmd">\n            <div class="commandline" disabled="cmd.disabled" output="cmd.output" input="cmd.lastLine"\n                    send-command="cmd.send(command)" on-previous="cmd.onPreviousCommand()" on-next="cmd.onNextCommand()">\n            </div>\n        </div>\n    </div>\n</div>'),e.put("commandline.html",'<div class="messages">\n    <div ng-repeat="line in output track by $index">\n        <div class="line" ng-show="line" ng-bind="line"></div>\n        <div ng-show="!line">&nbsp;</div>\n    </div>\n</div>\n<div class="interactive input-group" ng-show="input.prompt">\n    <span class="input-group-addon prompt" ng-bind="input.prompt" ng-click="focusOnInput()"></span>\n    <input type="text" class="form-control" ng-model="input.command" ng-disabled="disabled"\n           autocapitalize="off" autocorrect="off" spellcheck="false" autocomplete="off">\n</div>'),e.put("creation-dialog-body.html",'<fieldset>\n    <div class="clearfix form-group">\n        <label for="{{ modal.id }}Name" class="control-label">{{ locale.name }}</label>\n        <input type="text" id="{{ modal.id }}Name" class="form-control input-lg" ng-model="newDevice.name" />\n    </div>\n    <div class="clearfix form-group">\n        <label for="{{ modal.id }}Type" class="control-label">{{ locale.creationDialog.type }}</label>\n        <p ng-if="deviceTypes === null">{{ locale.loading }}</p>\n        <div ng-if="deviceTypes !== null">\n            <select id="{{ modal.id }}Type" class="form-control input-lg"\n                    ng-model="newDevice.type" ng-options="type.label for type in deviceTypes">\n            </select>\n        </div>\n    </div>\n</fieldset>'),e.put("default-dialog.html",'<form name="dialogForm">\n    <div class="modal-header">\n        <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n        <h4 class="modal-title" id="{{ modal.id }}Label">{{ modal.title }}</h4>\n    </div>\n    <div class="modal-body">\n        <div ng-include="modal.bodyTemplate"></div>\n        <p ng-if="submitError !== null" class="clearfix bg-danger">{{ submitError }}</p>\n    </div>\n    <div class="modal-footer">\n        <button ng-click="close()" type="button" class="btn btn-default btn-lg" data-dismiss="modal">Close</button>\n        <button ng-show="modal.hasSubmit" ng-disabled="dialogForm.$invalid" ng-click="submit()" type="button" class="btn btn-primary btn-lg">Submit</button>\n    </div>\n</form>'),e.put("input-ipaddress.html",'<div class="clearfix form-group has-feedback" ng-class="{\'has-error\': formController.$invalid}">\n    <label for="{{ id }}" class="control-label"><span ng-transclude></span></label>\n    <input type="text" ng-pattern="ipAddrPattern" ng-model="value"\n           name="{{ name }}" id="{{ id }}" class="form-control input-lg" aria-describedby="{{ id }}-error" >\n    <span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true" ng-show="formController.$invalid"></span>\n    <span id="{{ id }}-error" class="sr-only">(error)</span>\n</div>'),e.put("link-dialog-body.html",'<div ng-show="isLoadingInterfaces() && loadError === null">{{ locale.loadingInfo }}</div>\n<div ng-show="!isLoadingInterfaces()">\n    <div ng-show="availableInterfaces()">\n        <p>{{ locale.linkDialog.select }}</p>\n        <div class="clearfix form-group">\n            <label for="{{modal.id}}FromIface" class="col-md-3 fromDeviceName">{{ fromDeviceName }}</label>\n            <div class="col-md-9" ng-if="fromInterfaces !== null">\n                <select id="{{modal.id}}FromIface" class="form-control input-lg" size="1"\n                        ng-model="selected.fromIface" ng-options="iface.portName for iface in fromInterfaces">\n                </select>\n            </div>\n        </div>\n        <div class="clearfix form-group">\n            <label for="{{modal.id}}ToIface" class="col-md-3 toDeviceName">{{ toDeviceName }}</label>\n            <div class="col-md-9" ng-if="toInterfaces !== null">\n                <select id="{{modal.id}}ToIface" class="form-control input-lg" size="1"\n                        ng-model="selected.toIface" ng-options="iface.portName for iface in toInterfaces">\n                </select>\n            </div>\n        </div>\n    </div>\n    <div ng-show="!availableInterfaces()">\n        <p>{{ locale.linkDialog.error.unavailability }}</p>\n    </div>\n</div>\n<div ng-show="loadError !== null">\n    <p>{{ locale.linkDialog.error.loading }}</p>\n    <p>{{ loadError }}</p>\n</div>'),e.put("loading.html",'<div class="loading" ng-controller="SessionLoadingController as loading">\n    <img class="loading-icon" ng-src="{{ loading.path }}/loading.gif" alt="Loading network topology..." />\n    <p>{{ loading.loading }}</p>\n    <p>{{ loading.message }}</p>\n</div>'),e.put("main-widget.html",'<div ng-controller="WidgetController as widget">\n    <div class="network networkMap"\n         on-open-console="widget.openConsole(endpoint)"\n         on-add-device="widget.onAddDevice(x, y)"\n         on-add-link="widget.onAddLink(fromDevice, toDevice)"\n         on-edit-device="widget.onEditDevice(device)"\n         on-delete-device="widget.onDeleteDevice(device)"\n         on-delete-link="widget.onDeleteLink(link)"\n         adapt-coordinates="widget.getNetworkCoordinates"\n    ></div>\n    <div class="creation-menu">\n        <fieldset>\n            <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 col-xs-12">\n                <div class="row">\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="cloud" src="cloud.png"\n                             drag-to=".map" type="cloud" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Cloud</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="router" src="router.png"\n                             drag-to=".map" type="router" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Router</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="switch" src="switch.png"\n                             drag-to=".map" type="switch" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Switch</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="pc" src="pc.png"\n                             drag-to=".map" type="pc" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Pc</figcaption>\n                    </figure>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>'),
e.put("update-dialog-body.html",'<uib-tabset justified="true">\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.globalSettings }}</uib-tab-heading>\n        <div class="clearfix form-group">\n            <label for="{{ modal.id }}-name">{{ locale.name }}</label>\n            <input type="text" ng-model="device.name" id="{{ modal.id }}-name" class="form-control input-lg" />\n        </div>\n        <div class="inputIpAddress" ng-show="device.defaultGateway !== null"\n             id="{{ modal.id }}-default-gw" name="defaultgw"\n             ng-model="device.defaultGateway" form-controller="dialogForm.defaultgw">\n            {{ locale.modificationDialog.defaultGW }}\n        </div>\n    </uib-tab>\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.interfaces }}</uib-tab-heading>\n        <div ng-show="interfaces === null">{{ locale.loadingInfo }}</div>\n        <div ng-show="interfaces !== null">\n            <div class="clearfix form-group">\n                <label for="{{ modal.id }}-ifaces" class="control-label">{{ locale.name }}</label>\n                <select id="{{ modal.id }}-ifaces" class="form-control input-lg" size="1"\n                        ng-model="interface.selected" ng-options="iface.portName for iface in interfaces">\n                </select>\n            </div>\n            <hr />\n            <div class="clearfix form-group" ng-show="interface.ipAddr !== null">\n                <div class="inputIpAddress" id="{{ modal.id }}-ipaddr" name="ipaddr"\n                     ng-model="interface.ipAddr" form-controller="dialogForm.ipaddr">\n                    {{ locale.modificationDialog.ipAddress }}\n                </div>\n                <div class="inputIpAddress" id="{{ modal.id }}-subnet" name="subnet"\n                     ng-model="interface.subnet" form-controller="dialogForm.subnet">\n                    {{ locale.modificationDialog.subnetMask }}\n                </div>\n            </div>\n            <div class="clearfix form-group" ng-show="interface.ipAddr === null">\n                <p class="col-md-12">{{ locale.modificationDialog.noSettings }}</p>\n            </div>\n        </div>\n    </uib-tab>\n</uib-tabset>\n')}]);