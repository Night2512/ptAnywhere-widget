/**
 * ptAnywhere - User friendly interface to use PT Anywhere.
 * @version v2.0.1
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
angular.module("ptAnywhere",["ngRoute","ui.bootstrap"]).config(["$injector","$provide",function(e,n){var t={baseUrl:"",apiUrl:""};for(var o in t)try{e.get(o)}catch(i){console.log('Setting default value for non existing "baseUrl" constant: "'+t[o]+'"'),n.constant(o,t[o])}}]).config(["$routeProvider",function(e){e.when("/",{template:"",controller:"SessionCreatorController"}).when("/not-found",{templateUrl:"not-found.html"}).when("/loading/:id",{templateUrl:"loading.html"}).when("/s/:id",{templateUrl:"main-widget.html"}).otherwise("/")}]),angular.module("ptAnywhere").controller("CommandLineController",["$scope","$uibModalInstance","locale_en","endpoint",function(e,n,t,o){e.title=t.commandLineDialog.title,e.endpoint=o,e.close=function(){n.dismiss("cancel")}}]),angular.module("ptAnywhere").controller("SessionCreatorController",["$location","PTAnywhereAPIService","fileToOpen",function(e,n,t){n.createSession(t,null).then(function(n){e.path("/loading/"+n)})}]).controller("SessionLoadingController",["$location","$routeParams","PTAnywhereAPIService","NetworkMapData","baseUrl","locale_en",function(e,n,t,o,i,l){var a=this;a.baseUrl=i,a.loading=l.network.loading,a.message="",t.startSession(n.id),t.getNetwork(function(e){a.message=e}).then(function(t){o.load(t),e.path("/s/"+n.id)},function(n){e.path("/not-found")})}]).controller("WidgetController",["$q","$log","$location","$routeParams","$uibModal","baseUrl","NetworkMapData","PTAnywhereAPIService",function(e,n,t,o,i,l,a,r){var d,c=this;a.isLoaded()?(c.iconsPath=l+"/images/",c.openConsole=function(e){var n="console?endpoint="+e;d=i.open({templateUrl:"cmd-dialog.html",controller:"CommandLineController",resolve:{endpoint:function(){return n}},windowClass:"terminal-dialog"})},c.onAddDevice=function(e,n){d=i.open({templateUrl:"default-dialog.html",controller:"CreationController",resolve:{position:function(){return[e,n]}}}),d.result.then(function(e){a.addNode(e)})},c.onAddLink=function(e,n){d=i.open({templateUrl:"default-dialog.html",controller:"LinkController",resolve:{fromDevice:function(){return e},toDevice:function(){return n}}}),d.result.then(function(t){a.connect(e,n,t.newLink.id,t.newLink.url,t.fromPortName,t.toPortName)})},c.onEditDevice=function(e){d=i.open({templateUrl:"default-dialog.html",controller:"UpdateController",resolve:{device:function(){return e}}}),d.result.then(function(e){null!==e&&a.updateNode(e)}),d.opened.then(function(e){console.log("open")}),d.rendered.then(function(e){console.log("render")})},c.onDeleteDevice=function(t){return e(function(e,o){r.removeDevice(t).then(function(){e()},function(e){n.error("Device removal.",e),o()})})},c.onDeleteLink=function(t){return e(function(e,o){r.removeLink(t).then(function(){e()},function(){n.error("Something went wrong in the link removal."),o()})})}):t.path("/loading/"+o.id)}]),angular.module("ptAnywhere").controller("CreationController",["$log","$scope","$uibModalInstance","locale_en","PTAnywhereAPIService","position",function(e,n,t,o,i,l){n.submitError=null,n.locale=o,n.modal={id:"creationDialog",title:o.creationDialog.title,bodyTemplate:"creation-dialog-body.html",hasSubmit:!0},n.deviceTypes=[{value:"cloud",label:"Cloud"},{value:"router",label:"Router"},{value:"switch",label:"Switch"},{value:"pc",label:"PC"}],n.newDevice={name:"",type:n.deviceTypes[0]},n.submit=function(){var o={label:n.newDevice.name,group:n.newDevice.type.value,x:l[0],y:l[1]};n.submitError=null,i.addDevice(o).then(function(e){t.close(e)},function(t){var o=t.status===-1?"timeout":t.statusText;n.submitError="Device could not be created ("+o+").",e.error("Device creation",t)})},n.close=function(){t.dismiss("cancel")}}]),angular.module("ptAnywhere").factory("PTAnywhereAPIService",["$http","apiUrl","HttpRetry",function(e,n,t){var o="",i={timeout:2e3};return{createSession:function(t,i){var l={fileUrl:t};return null!==i&&(l.sameUserAsInSession=i),e.post(n+"/sessions",l,{timeout:1e4}).then(function(e){o=e.data;var n=e.data.split("/"),t=n[n.length-1];return t})},startSession:function(e){o=n+"/sessions/"+e},getNetwork:function(n){var l=function(e){return e.data};return t.setSuccess(l),t.setExplainer(n),e.get(o+"/network",i).then(l,t.responseError)},addDevice:function(n){return e.post(o+"/devices",n,i).then(function(e){return e.data})},removeDevice:function(n){return e["delete"](n.url,i)},modifyDevice:function(n,t,o){var l={label:t};return""!==o&&(l.defaultGateway=o),e.put(n.url,l,i).then(function(e){var n=e.data;return n.defaultGateway=o,n})},modifyPort:function(n,t,o){var l={portIpAddress:t,portSubnetMask:o};return e.put(n,l,i).then(function(e){return e.data})},getAllPorts:function(n){return e.get(n.url+"ports",i).then(function(e){return e.data})},getAvailablePorts:function(n){return e.get(n.url+"ports?free=true",i).then(function(e){return e.data})},createLink:function(n,t){var o={toPort:t};return e.post(n+"link",o,i).then(function(e){return e.data})},removeLink:function(n){return e.get(n.url,i).then(function(n){return e["delete"](n.data.endpoints[0]+"link")})}}}]).factory("HttpRetry",["$http","$q","$timeout","$location","locale_en",function(e,n,t,o,i){function l(n,o){return t(function(){return e(n).then(s,r)},o)}function a(e){var n;switch(e){case 503:n=i.network.errorUnavailable;break;case 0:n=i.network.errorTimeout;break;default:n=i.network.errorUnknown}return n+". "+i.network.attempt+" "+d+"/"+c+"."}function r(e){if((0===e.status||503===e.status)&&d<c){var t=0===e.status?0:2e3;return d++,u(a(e.status)),l(e.config,t)}return n.reject(e)}var d=0,c=5,s=null,u=null;return{responseError:r,setSuccess:function(e){s=e},setExplainer:function(e){u=e}}}]).factory("HttpErrorsInterceptor",["$q","$location",function(e,n){return{responseError:function(t){return 404!==t.status&&410!==t.status||n.path("/not-found"),e.reject(t)}}}]),angular.module("ptAnywhere").controller("LinkController",["$log","$scope","$uibModalInstance","locale_en","PTAnywhereAPIService","fromDevice","toDevice",function(e,n,t,o,i,l,a){var r=this;n.fromDeviceName=l.label,n.toDeviceName=a.label,n.fromInterfaces=null,n.toInterfaces=null,n.submitError=null,n.loadError=null,n.locale=o,n.modal={id:"linkDialog",title:o.linkDialog.title,bodyTemplate:"link-dialog-body.html",hasSubmit:!1},n.selected={fromIface:null,toIface:null},r._load=function(){if(null!==l&&null!==a){var t=[i.getAvailablePorts(l),i.getAvailablePorts(a)];Promise.all(t).then(function(e){n.fromInterfaces=e[0],n.toInterfaces=e[1],n.emptyInterfaces()||(n.selected.fromIface=n.fromInterfaces[0],n.selected.toIface=n.toInterfaces[0],n.modal.hasSubmit=!0),n.$$phase||n.$apply()},function(t){n.loadError="(error code: "+t.status+")",e.error("Not loaded!",t),n.$$phase||n.$apply()})}},n.isLoadingInterfaces=function(){return null===n.fromInterfaces&&null===n.toInterfaces},n.emptyInterfaces=function(){return 0===n.fromInterfaces.length||0===n.toInterfaces.length},n.availableInterfaces=function(){return!n.isLoadingInterfaces()&&!n.emptyInterfaces()},n.submit=function(){var o=n.selected.fromIface,l=n.selected.toIface;n.submitError=null,i.createLink(o.url,l.url).then(function(e){var n={newLink:e,fromPortName:o.portName,toPortName:l.portName};t.close(n)},function(t){n.submitError="Link could not be created ("+t.statusText+").",e.error("Link creation",t)})},n.close=function(){t.dismiss("cancel")},r._load()}]),angular.module("ptAnywhere").controller("UpdateController",["$log","$scope","$uibModalInstance","locale_en","PTAnywhereAPIService","device",function(e,n,t,o,i,l){var a=this;n.submitError=null,n.interfaces=null,n["interface"]={selected:null,ipAddr:null,subnet:null},n.locale=o,n.modal={id:"modification-dialog",title:o.modificationDialog.title,bodyTemplate:"update-dialog-body.html",hasSubmit:!0},n.device={name:l.label,defaultGateway:"defaultGateway"in l?l.defaultGateway:null},n.$watch("interfaces",function(e,t){null!==e&&(n["interface"].selected=e[0])}),n.$watch("interface.selected",function(e,t){e&&"portIpAddress"in e&&"portSubnetMask"in e?(n["interface"].ipAddr=e.portIpAddress,n["interface"].subnet=e.portSubnetMask):(n["interface"].ipAddr=null,n["interface"].subnet=null)}),a._load=function(){i.getAllPorts(l).then(function(e){n.interfaces=e,n.$$phase||n.$apply()},function(){n.submitError="Ports for the device "+l.id+" could not be loaded. Possible timeout."})},a._haveGlobalSettingsChanged=function(){return n.device.name!=l.label||"defaultGateway"in l&&n.device.defaultGateway!=l.defaultGateway},a._hasInterfaceChanged=function(){return null!==n["interface"].ipAddr&&null!==n["interface"].subnet&&(n["interface"].ipAddr!=n["interface"].selected.portIpAddress||n["interface"].subnet!=n["interface"].selected.portSubnetMask)},n.submit=function(){var o;o=a._haveGlobalSettingsChanged()?i.modifyDevice(l,n.device.name,n.device.defaultGateway).then(function(e){return e},function(e){return n.submitError="Global settings could not be modified.",e}):Promise.resolve(null),a._hasInterfaceChanged()&&(o=o.then(function(e){return i.modifyPort(n["interface"].selected.url,n["interface"].ipAddr,n["interface"].subnet).then(function(n){return e},function(e){return n.submitError="Interface details could not be modified.",e})})),o.then(function(e){t.close(e)},function(n){e.error("Update(s) could not be performed.",n)})},n.close=function(){t.dismiss("cancel")},a._load()}]),angular.module("ptAnywhere").directive("networkMap",["locale_en","NetworkMapData",function(e,n){function t(t,o){var i={nodes:n.getNodes(),edges:n.getEdges()},l={nodes:{physics:!1,font:"14px verdana black"},edges:{width:3,selectionWidth:1.4,color:{color:"#606060",highlight:"#000000",hover:"#000000"}},groups:{cloudDevice:{shape:"image",image:t.iconsSrc+"cloud.png",size:50},routerDevice:{shape:"image",image:t.iconsSrc+"router_cropped.png",size:45},switchDevice:{shape:"image",image:t.iconsSrc+"switch_cropped.png",size:35},pcDevice:{shape:"image",image:t.iconsSrc+"pc_cropped.png",size:45}},manipulation:s(t),locale:"ptAnywhere",locales:{ptAnywhere:e.manipulationMenu}},a=o.find("div")[0];return new vis.Network(a,i,l)}function o(){var e=u.getSelection();return 1!==e.nodes.length?(console.log("Only one device is supposed to be selected. Instead "+e.nodes.length+" are selected."),null):n.getNode(e.nodes[0])}function i(e){return 0===e.nodes.length&&1===e.edges.length}function l(e){return e.nodes.length>0}function a(e){return e.label.indexOf("\n")!==-1}function r(e){var t=n.getNode(e.from),o=n.getNode(e.to);a(t)||(t.label=t.label+"\n("+e.fromLabel+")",n.updateNode(t)),a(o)||(o.label=o.label+"\n("+e.toLabel+")",n.updateNode(o))}function d(e){var t=n.getNode(e.from),o=n.getNode(e.to);a(t)&&(t.label=t.label.split("\n")[0],n.updateNode(t)),a(o)&&(o.label=o.label.split("\n")[0],n.updateNode(o))}function c(e){for(var t=0;t<e.edges.length;t++)d(n.getEdge(e.edges[t]))}function s(e){var t=function(e,n){},o=t,i=t,l=t,a=t,r=t;return"onAddDevice"in e&&(o=function(n,t){e.onAddDevice({x:n.x,y:n.y})}),"onAddLink"in e&&(i=function(t,o){var i=n.getNode(t.from),l=n.getNode(t.to);e.onAddLink({fromDevice:i,toDevice:l})}),"onEditDevice"in e&&(l=function(t,o){e.onEditDevice({device:n.getNode(t.id)}),o(t)}),"onDeleteDevice"in e&&(a=function(t,o){e.onDeleteDevice({device:n.getNode(t.nodes[0])}).then(function(){o(t)})}),"onDeleteLink"in e&&(r=function(t,o){var i=n.getEdge(t.edges[0]);d(i),e.onDeleteLink({link:i}).then(function(){o(t)})}),{initiallyActive:!0,addNode:o,addEdge:i,editNode:l,editEdge:!1,deleteNode:a,deleteEdge:r}}var u;return{restrict:"C",scope:{iconsSrc:"@",onDoubleClick:"&",onAddDevice:"&",onAddLink:"&",onEditDevice:"&",onDeleteDevice:"&",onDeleteLink:"&"},template:'<div class="map"></div>',link:function(e,a,d){"iconsSrc"in d&&""!==e.iconsSrc&&(u=t(e,a),e.$on("$destroy",function(){u.destroy()}),u.on("select",function(e){if(i(e)){var t=n.getEdge(e.edges[0]);r(t)}else l(e)&&c(e)}),u.on("deselectEdge",function(e){i(e.previousSelection)&&c(e.previousSelection)}),"onDoubleClick"in e&&u.on("doubleClick",function(){var n=o();null!==n&&e.onDoubleClick({endpoint:n.consoleEndpoint})}))}}}]),angular.module("ptAnywhere").factory("NetworkMapData",[function(){var e=!1,n=new vis.DataSet,t=new vis.DataSet;return{load:function(o){e=!0,null!==o.devices&&(n.clear(),n.add(o.devices)),null!==o.edges&&(t.clear(),t.add(o.edges))},isLoaded:function(){return e},getNode:function(e){return n.get(e)},updateNode:function(e){n.update(e)},addNode:function(e){return n.add(e)},getNodes:function(){return n},getEdge:function(e){return t.get(e)},getEdges:function(){return t},connect:function(e,n,o,i,l,a){var r;r="string"==typeof e&&"string"==typeof n?{from:getByName(e).id,to:getByName(n).id}:{from:e.id,to:n.id},void 0!==o&&(r.id=o),void 0!==i&&(r.url=i),void 0!==l&&(r.fromLabel=l),void 0!==a&&(r.toLabel=a),t.add(r)}}}]),angular.module("ptAnywhere").value("locale_en",{loading:"Loading...",loadingInfo:"Loading info...",name:"Name",manipulationMenu:{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Device",addEdge:"Connect Devices",editNode:"Edit Device",addDescription:"Click in an empty space to place a new device.",edgeDescription:"Click on a node and drag the edge to another element to connect them.",editEdge:"Edit Edge",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},session:{creating:{title:"Creating new session...",content:""},unavailable:{title:"Unavailable PT instances",content:"<p>Sorry, there are <b>no Packet Tracer instances available</b> right now to initiate a session.</p><p>Please, wait a little bit and <b>try again</b>.</p>"}},network:{loading:"Loading network...",attempt:"Attempt",errorUnavailable:"Instance not yet available",errorTimeout:"Timeout",errorUnknown:"Unknown error",notLoaded:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="?session">Click here</a> to initiate a new one.</p>'}},commandLineDialog:{title:"Command line"},linkDialog:{title:"Connect two devices",select:"Please select which ports to connect...",error:{loading:"Problem loading the interfaces for this device. Please, try it again.",unavailability:"One of the devices you are trying to link has no available interfaces.",creation:"Sorry, something went wrong during the link creation."}},creationDialog:{title:"Create new device",type:"Device type"},creationMenu:{legend:"To create a new device, drag it to the network map"},modificationDialog:{title:"Modify device",globalSettings:"Global Settings",interfaces:"Interfaces",defaultGW:"Default gateway",ipAddress:"IP address",subnetMask:"Subnet mask",noSettings:"No settings can be specified for this type of interface."}}),angular.module("ptAnywhere").run(["$templateCache",function(e){e.put("cmd-dialog.html",'<div class="modal-header" style="height: 10%;">\n    <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n    <h4 class="modal-title" id="cmdModal">{{ title }}</h4>\n</div>\n<div class="modal-body" style="height: 89%;">\n    <div class="iframeWrapper">\n        <iframe class="terminal" src="{{ endpoint }}"></iframe>\n    </div>\n</div>'),e.put("creation-dialog-body.html",'<form>\n    <fieldset>\n        <div class="clearfix form-group">\n            <label for="{{ modal.id }}Name" class="col-md-3">{{ locale.name }}: </label>\n            <div class="col-md-9">\n                <input type="text" id="{{ modal.id }}Name" class="form-control" ng-model="newDevice.name" />\n            </div>\n        </div>\n        <div class="clearfix form-group">\n            <label for="{{ modal.id }}Type" class="col-md-3">{{ locale.creationDialog.type }}</label>\n            <div class="col-md-9">\n                <p ng-if="deviceTypes === null">{{ locale.loading }}</p>\n                <div ng-if="deviceTypes !== null">\n                    <select id="{{ modal.id }}Type" class="form-control" ng-model="newDevice.type"\n                            ng-options="type.label for type in deviceTypes">\n                    </select>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>'),e.put("default-dialog.html",'<div class="modal-header">\n    <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n    <h4 class="modal-title" id="{{ modal.id }}Label">{{ modal.title }}</h4>\n</div>\n<div class="modal-body">\n    <div ng-include="modal.bodyTemplate"></div>\n    <p ng-if="submitError !== null" class="clearfix bg-danger">{{ submitError }}</p>\n</div>\n<div class="modal-footer">\n    <button ng-click="close()" type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    <button ng-show="modal.hasSubmit" ng-click="submit()" type="button" class="btn btn-primary">Submit</button>\n</div>'),e.put("link-dialog-body.html",'<form name="link-devices">\n    <div ng-show="isLoadingInterfaces() && loadError === null">{{ locale.loadingInfo }}</div>\n    <div ng-show="!isLoadingInterfaces()">\n        <div ng-show="availableInterfaces()">\n            <p>{{ locale.linkDialog.select }}</p>\n            <div class="clearfix form-group">\n                <label for="{{modal.id}}FromIface" class="col-md-3 fromDeviceName">{{ fromDeviceName }}</label>\n                <div class="col-md-9" ng-if="fromInterfaces !== null">\n                    <select id="{{modal.id}}FromIface" class="form-control" size="1" ng-model="selected.fromIface"\n                            ng-options="iface.portName for iface in fromInterfaces">\n                    </select>\n                </div>\n            </div>\n            <div class="clearfix form-group">\n                <label for="{{modal.id}}ToIface" class="col-md-3 toDeviceName">{{ toDeviceName }}</label>\n                <div class="col-md-9" ng-if="toInterfaces !== null">\n                    <select id="{{modal.id}}ToIface" class="form-control" size="1" ng-model="selected.toIface"\n                            ng-options="iface.portName for iface in toInterfaces">\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div ng-show="!availableInterfaces()">\n            <p>{{ locale.linkDialog.error.unavailability }}</p>\n        </div>\n    </div>\n    <div ng-show="loadError !== null">\n        <p>{{ locale.linkDialog.error.loading }}</p>\n        <p>{{ loadError }}</p>\n    </div>\n</form>'),e.put("loading.html",'<div class="loading" ng-controller="SessionLoadingController as loading">\n    <img class="loading-icon" src="{{ loading.baseUrl }}/images/loading.gif" alt="Loading network topology..." />\n    <p>{{ loading.loading }}</p>\n    <p>{{ loading.message }}</p>\n</div>'),e.put("main-widget.html",'<div ng-controller="WidgetController as widget">\n    <div class="network networkMap" icons-src="{{ widget.iconsPath }}"\n         on-double-click="widget.openConsole(endpoint)"\n         on-add-device="widget.onAddDevice(x, y)"\n         on-add-link="widget.onAddLink(fromDevice, toDevice)"\n         on-edit-device="widget.onEditDevice(device)"\n         on-delete-device="widget.onDeleteDevice(device)"\n         on-delete-link="widget.onDeleteLink(link)"></div>\n    <div class="creation-menu"></div>\n</div>'),e.put("not-found.html",'<div class="row message">\n    <div class="col-md-8 col-md-offset-2 text-center">\n        <h1>Topology not found</h1>\n        <p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p>\n        <p><a href="#/">Click here</a> to initiate a new one.</p>\n    </div>\n</div>'),e.put("update-dialog-body.html",'<uib-tabset>\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.globalSettings }}</uib-tab-heading>\n        <div class="clearfix form-group">\n            <label for="{{ modal.id }}-name" class="col-md-3">{{ locale.name }}: </label>\n            <div class="col-md-9">\n                <input type="text" ng-model="device.name" id="{{ modal.id }}-name" class="form-control" />\n            </div>\n        </div>\n        <div class="clearfix form-group"  ng-show="device.defaultGateway !== null">\n            <label for="{{ modal.id }}-default-gw" class="col-md-3">{{ locale.modificationDialog.defaultGW }}: </label>\n            <div class="col-md-9">\n                <input type="text" ng-model="device.defaultGateway" id="{{ modal.id }}-default-gw" class="form-control" />\n            </div>\n        </div>\n    </uib-tab>\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.interfaces }}</uib-tab-heading>\n        <div ng-show="interfaces === null">{{ locale.loadingInfo }}</div>\n        <div ng-show="interfaces !== null">\n            <div class="clearfix form-group">\n                <label for="{{ modal.id }}-ifaces" class="col-md-3">{{ locale.name }}: </label>\n                <div class="col-md-9">\n                    <select id="{{ modal.id }}-ifaces" class="form-control" size="1" ng-model="interface.selected"\n                            ng-options="iface.portName for iface in interfaces">\n                    </select>\n                </div>\n            </div>\n            <hr />\n            <div class="clearfix form-group" ng-show="interface.ipAddr !== null">\n                <div class="clearfix form-group">\n                    <label for="{{ modal.id }}-idaddr" class="col-md-3">{{ locale.modificationDialog.ipAddress }}: </label>\n                    <div class="col-md-9">\n                        <input type="text" id="{{ modal.id }}-idaddr" class="form-control" ng-model="interface.ipAddr" />\n                    </div>\n                </div>\n                <div class="clearfix form-group">\n                    <label for="{{ modal.id }}-subnet" class="col-md-3">{{ locale.modificationDialog.subnetMask }}: </label>\n                    <div class="col-md-9">\n                        <input type="text" id="{{ modal.id }}-subnet" class="form-control"  ng-model="interface.subnet" />\n                    </div>\n                </div>\n            </div>\n            <div ng-show="interface.ipAddr === null">{{ locale.modificationDialog.noSettings }}</div>\n        </div>\n    </uib-tab>\n</uib-tabset>\n')}]);