/**
 * ptAnywhere - User friendly interface to use PT Anywhere.
 * @version v2.0.1
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
angular.module("ptAnywhere",["ngRoute","ui.bootstrap"]).config(["$injector","$provide",function(e,t){var n={baseUrl:"",apiUrl:""};for(var o in n)try{e.get(o)}catch(r){console.log('Setting default value for non existing "baseUrl" constant: "'+n[o]+'"'),t.constant(o,n[o])}}]).config(["$routeProvider","baseUrl",function(e,t){e.when("/",{template:"",controller:"SessionCreatorController"}).when("/not-found",{templateUrl:t+"/html/not-found.html"}).when("/loading/:id",{templateUrl:t+"/html/loading.html"}).when("/s/:id",{templateUrl:t+"/html/main-widget.html"}).otherwise("/")}]),angular.module("ptAnywhere").controller("SessionCreatorController",["$location","PTAnywhereAPIService","fileToOpen",function(e,t,n){t.createSession(n,null).then(function(t){e.path("/loading/"+t)})}]).controller("SessionLoadingController",["$location","$routeParams","PTAnywhereAPIService","NetworkMapData","baseUrl","locale_en",function(e,t,n,o,r,i){var a=this;a.baseUrl=r,a.loading=i.network.loading,a.message="",n.startSession(t.id),n.getNetwork(function(e){a.message=e}).then(function(n){o.load(n),e.path("/s/"+t.id)},function(t){e.path("/not-found")})}]).controller("WidgetController",["$q","$log","$location","$routeParams","$uibModal","baseUrl","NetworkMapData","PTAnywhereAPIService",function(e,t,n,o,r,i,a,l){var c,d=this;a.isLoaded()?(d.iconsPath=i+"/images/",d.openConsole=function(e){var t="console?endpoint="+e;d.openCmdModal(t)},d.onAddDevice=function(e,t){c=r.open({animation:!1,templateUrl:i+"/html/default-dialog2.html",controller:"CreationController",resolve:{position:function(){return[e,t]}}}),c.result.then(function(e){a.addNode(e)})},d.onAddLink=function(e,t){c=r.open({animation:!1,templateUrl:i+"/html/default-dialog2.html",controller:"LinkController",resolve:{fromDevice:function(){return e},toDevice:function(){return t}}}),c.result.then(function(n){a.connect(e,t,n.newLink.id,n.newLink.url,n.fromPortName,n.toPortName)})},d.onEditDevice=function(e){c=r.open({animation:!1,templateUrl:i+"/html/default-dialog2.html",controller:"UpdateController",resolve:{device:function(){return e}}}),c.result.then(function(e){null!==e&&a.updateNode(e)})},d.onDeleteDevice=function(n){return e(function(e,o){l.removeDevice(n).then(function(){e()},function(e){t.error("Device removal.",e),o()})})},d.onDeleteLink=function(n){return e(function(e,o){l.removeLink(n).then(function(){e()},function(){t.error("Something went wrong in the link removal."),o()})})}):n.path("/loading/"+o.id)}]),angular.module("ptAnywhere").controller("CreationController",["$log","$scope","$uibModalInstance","locale_en","baseUrl","PTAnywhereAPIService","position",function(e,t,n,o,r,i,a){t.submitError=null,t.locale=o,t.modal={id:"creationDialog",title:o.creationDialog.title,bodyTemplate:r+"/html/creation-dialog-body.html",hasSubmit:!0},t.deviceTypes=[{value:"cloud",label:"Cloud"},{value:"router",label:"Router"},{value:"switch",label:"Switch"},{value:"pc",label:"PC"}],t.newDevice={name:"",type:t.deviceTypes[0]},t.submit=function(){var o={label:t.newDevice.name,group:t.newDevice.type.value,x:a[0],y:a[1]};t.submitError=null,i.addDevice(o).then(function(e){n.close(e)},function(n){var o=n.status===-1?"timeout":n.statusText;t.submitError="Device could not be created ("+o+").",e.error("Device creation",n)})},t.close=function(){n.dismiss("cancel")}}]),angular.module("ptAnywhere").factory("PTAnywhereAPIService",["$http","apiUrl","HttpRetry",function(e,t,n){var o="",r={timeout:2e3};return{createSession:function(n,r){var i={fileUrl:n};return null!==r&&(i.sameUserAsInSession=r),e.post(t+"/sessions",i,{timeout:1e4}).then(function(e){o=e.data;var t=e.data.split("/"),n=t[t.length-1];return n})},startSession:function(e){o=t+"/sessions/"+e},getNetwork:function(t){var i=function(e){return e.data};return n.setSuccess(i),n.setExplainer(t),e.get(o+"/network",r).then(i,n.responseError)},addDevice:function(t){return e.post(o+"/devices",t,r).then(function(e){return e.data})},removeDevice:function(t){return e["delete"](t.url,r)},modifyDevice:function(t,n,o){var i={label:n};return""!==o&&(i.defaultGateway=o),e.put(t.url,i,r).then(function(e){var t=e.data;return t.defaultGateway=o,t})},modifyPort:function(t,n,o){var i={portIpAddress:n,portSubnetMask:o};return e.put(t,i,r).then(function(e){return e.data})},getAllPorts:function(t){return e.get(t.url+"ports",r).then(function(e){return e.data})},getAvailablePorts:function(t){return e.get(t.url+"ports?free=true",r).then(function(e){return e.data})},createLink:function(t,n){var o={toPort:n};return e.post(t+"link",o,r).then(function(e){return e.data})},removeLink:function(t){return e.get(t.url,r).then(function(t){return e["delete"](t.data.endpoints[0]+"link")})}}}]).factory("HttpRetry",["$http","$q","$timeout","$location","locale_en",function(e,t,n,o,r){function i(t,o){return n(function(){return e(t).then(u,l)},o)}function a(e){var t;switch(e){case 503:t=r.network.errorUnavailable;break;case 0:t=r.network.errorTimeout;break;default:t=r.network.errorUnknown}return t+". "+r.network.attempt+" "+c+"/"+d+"."}function l(e){if((0===e.status||503===e.status)&&c<d){var n=0===e.status?0:2e3;return c++,s(a(e.status)),i(e.config,n)}return t.reject(e)}var c=0,d=5,u=null,s=null;return{responseError:l,setSuccess:function(e){u=e},setExplainer:function(e){s=e}}}]).factory("HttpErrorsInterceptor",["$q","$location",function(e,t){return{responseError:function(n){return 404!==n.status&&410!==n.status||t.path("/not-found"),e.reject(n)}}}]),angular.module("ptAnywhere").controller("LinkController",["$log","$scope","$uibModalInstance","locale_en","baseUrl","PTAnywhereAPIService","fromDevice","toDevice",function(e,t,n,o,r,i,a,l){var c=this;t.fromDeviceName=a.label,t.toDeviceName=l.label,t.fromInterfaces=null,t.toInterfaces=null,t.submitError=null,t.loadError=null,t.locale=o,t.modal={id:"linkDialog",title:o.linkDialog.title,bodyTemplate:r+"/html/link-dialog-body.html",hasSubmit:!1},t.selected={fromIface:null,toIface:null},c._load=function(){if(null!==a&&null!==l){var n=[i.getAvailablePorts(a),i.getAvailablePorts(l)];Promise.all(n).then(function(e){t.fromInterfaces=e[0],t.toInterfaces=e[1],t.emptyInterfaces()||(t.selected.fromIface=t.fromInterfaces[0],t.selected.toIface=t.toInterfaces[0],t.modal.hasSubmit=!0),t.$$phase||t.$apply()},function(n){t.loadError="(error code: "+n.status+")",e.error("Not loaded!",n),t.$$phase||t.$apply()})}},t.isLoadingInterfaces=function(){return null===t.fromInterfaces&&null===t.toInterfaces},t.emptyInterfaces=function(){return 0===t.fromInterfaces.length||0===t.toInterfaces.length},t.availableInterfaces=function(){return!t.isLoadingInterfaces()&&!t.emptyInterfaces()},t.submit=function(){var o=t.selected.fromIface,r=t.selected.toIface;t.submitError=null,i.createLink(o.url,r.url).then(function(e){var t={newLink:e,fromPortName:o.portName,toPortName:r.portName};n.close(t)},function(n){t.submitError="Link could not be created ("+n.statusText+").",e.error("Link creation",n)})},t.close=function(){n.dismiss("cancel")},c._load()}]),angular.module("ptAnywhere").controller("UpdateController",["$log","$scope","$uibModalInstance","locale_en","baseUrl","PTAnywhereAPIService","device",function(e,t,n,o,r,i,a){var l=this;t.submitError=null,t.interfaces=null,t["interface"]={selected:null,ipAddr:null,subnet:null},t.locale=o,t.modal={id:"modification-dialog",title:o.modificationDialog.title,bodyTemplate:r+"/html/update-dialog-body.html",hasSubmit:!0},t.device={name:a.label,defaultGateway:"defaultGateway"in a?a.defaultGateway:null},t.$watch("interfaces",function(e,n){null!==e&&(t["interface"].selected=e[0])}),t.$watch("interface.selected",function(e,n){e&&"portIpAddress"in e&&"portSubnetMask"in e?(t["interface"].ipAddr=e.portIpAddress,t["interface"].subnet=e.portSubnetMask):(t["interface"].ipAddr=null,t["interface"].subnet=null)}),l._load=function(){i.getAllPorts(a).then(function(e){t.interfaces=e,t.$$phase||t.$apply()},function(){t.submitError="Ports for the device "+a.id+" could not be loaded. Possible timeout."})},l._haveGlobalSettingsChanged=function(){return t.device.name!=a.label||"defaultGateway"in a&&t.device.defaultGateway!=a.defaultGateway},l._hasInterfaceChanged=function(){return null!==t["interface"].ipAddr&&null!==t["interface"].subnet&&(t["interface"].ipAddr!=t["interface"].selected.portIpAddress||t["interface"].subnet!=t["interface"].selected.portSubnetMask)},t.submit=function(){var o;o=l._haveGlobalSettingsChanged()?i.modifyDevice(a,t.device.name,t.device.defaultGateway).then(function(e){return e},function(e){return t.submitError="Global settings could not be modified.",e}):Promise.resolve(null),l._hasInterfaceChanged()&&(o=o.then(function(e){return i.modifyPort(t["interface"].selected.url,t["interface"].ipAddr,t["interface"].subnet).then(function(t){return e},function(e){return t.submitError="Interface details could not be modified.",e})})),o.then(function(e){n.close(e)},function(t){e.error("Update(s) could not be performed.",t)})},t.close=function(){n.dismiss("cancel")},l._load()}]),angular.module("ptAnywhere").directive("cmdDialog",["locale_en","baseUrl",function(e,t){return{restrict:"C",scope:{open:"=",backdrop:"@"},templateUrl:t+"/html/cmd-dialog.html",link:function(t,n,o){var r=$(n.find("div")[0]),i={backdrop:"backdrop"in t&&"true"===t.backdrop};t.title=e.commandLineDialog.title,t.open=function(e){var t=$("iframe.terminal",r);t.attr("src",e),t.on("load",function(){console.log("LOADED"),r.modal(i),r.modal("show")})}}}}]),angular.module("ptAnywhere").directive("networkMap",["locale_en","baseUrl","NetworkMapData",function(e,t,n){function o(t,o){var r={nodes:n.getNodes(),edges:n.getEdges()},i={nodes:{physics:!1,font:"14px verdana black"},edges:{width:3,selectionWidth:1.4,color:{color:"#606060",highlight:"#000000",hover:"#000000"}},groups:{cloudDevice:{shape:"image",image:t.iconsSrc+"cloud.png",size:50},routerDevice:{shape:"image",image:t.iconsSrc+"router_cropped.png",size:45},switchDevice:{shape:"image",image:t.iconsSrc+"switch_cropped.png",size:35},pcDevice:{shape:"image",image:t.iconsSrc+"pc_cropped.png",size:45}},manipulation:s(t),locale:"ptAnywhere",locales:{ptAnywhere:e.manipulationMenu}},a=o.find("div")[0];return new vis.Network(a,r,i)}function r(){var e=f.getSelection();return 1!==e.nodes.length?(console.log("Only one device is supposed to be selected. Instead "+e.nodes.length+" are selected."),null):n.getNode(e.nodes[0])}function i(e){return 0===e.nodes.length&&1===e.edges.length}function a(e){return e.nodes.length>0}function l(e){return e.label.indexOf("\n")!==-1}function c(e){var t=n.getNode(e.from),o=n.getNode(e.to);l(t)||(t.label=t.label+"\n("+e.fromLabel+")",n.updateNode(t)),l(o)||(o.label=o.label+"\n("+e.toLabel+")",n.updateNode(o))}function d(e){var t=n.getNode(e.from),o=n.getNode(e.to);l(t)&&(t.label=t.label.split("\n")[0],n.updateNode(t)),l(o)&&(o.label=o.label.split("\n")[0],n.updateNode(o))}function u(e){for(var t=0;t<e.edges.length;t++)d(n.getEdge(e.edges[t]))}function s(e){var t=function(e,t){},o=t,r=t,i=t,a=t,l=t;return"onAddDevice"in e&&(o=function(t,n){e.onAddDevice({x:t.x,y:t.y})}),"onAddLink"in e&&(r=function(t,o){var r=n.getNode(t.from),i=n.getNode(t.to);e.onAddLink({fromDevice:r,toDevice:i})}),"onEditDevice"in e&&(i=function(t,o){e.onEditDevice({device:n.getNode(t.id)}),o(t)}),"onDeleteDevice"in e&&(a=function(t,o){e.onDeleteDevice({device:n.getNode(t.nodes[0])}).then(function(){o(t)})}),"onDeleteLink"in e&&(l=function(t,o){var r=n.getEdge(t.edges[0]);d(r),e.onDeleteLink({link:r}).then(function(){o(t)})}),{initiallyActive:!0,addNode:o,addEdge:r,editNode:i,editEdge:!1,deleteNode:a,deleteEdge:l}}var f;return{restrict:"C",scope:{iconsSrc:"@",onDoubleClick:"&",onAddDevice:"&",onAddLink:"&",onEditDevice:"&",onDeleteDevice:"&",onDeleteLink:"&"},template:'<div class="map"></div>',link:function(e,t,l){"iconsSrc"in l&&""!==e.iconsSrc&&(f=o(e,t),e.$on("$destroy",function(){f.destroy()}),f.on("select",function(e){if(i(e)){var t=n.getEdge(e.edges[0]);c(t)}else a(e)&&u(e)}),f.on("deselectEdge",function(e){i(e.previousSelection)&&u(e.previousSelection)}),"onDoubleClick"in e&&f.on("doubleClick",function(){var t=r();null!==t&&e.onDoubleClick({endpoint:t.consoleEndpoint})}))}}}]),angular.module("ptAnywhere").factory("NetworkMapData",[function(){var e=!1,t=new vis.DataSet,n=new vis.DataSet;return{load:function(o){e=!0,null!==o.devices&&(t.clear(),t.add(o.devices)),null!==o.edges&&(n.clear(),n.add(o.edges))},isLoaded:function(){return e},getNode:function(e){return t.get(e)},updateNode:function(e){t.update(e)},addNode:function(e){return t.add(e)},getNodes:function(){return t},getEdge:function(e){return n.get(e)},getEdges:function(){return n},connect:function(e,t,o,r,i,a){var l;l="string"==typeof e&&"string"==typeof t?{from:getByName(e).id,to:getByName(t).id}:{from:e.id,to:t.id},void 0!==o&&(l.id=o),void 0!==r&&(l.url=r),void 0!==i&&(l.fromLabel=i),void 0!==a&&(l.toLabel=a),n.add(l)}}}]),angular.module("ptAnywhere").value("locale_en",{loading:"Loading...",loadingInfo:"Loading info...",name:"Name",manipulationMenu:{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Device",addEdge:"Connect Devices",editNode:"Edit Device",addDescription:"Click in an empty space to place a new device.",edgeDescription:"Click on a node and drag the edge to another element to connect them.",editEdge:"Edit Edge",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},session:{creating:{title:"Creating new session...",content:""},unavailable:{title:"Unavailable PT instances",content:"<p>Sorry, there are <b>no Packet Tracer instances available</b> right now to initiate a session.</p><p>Please, wait a little bit and <b>try again</b>.</p>"}},network:{loading:"Loading network...",attempt:"Attempt",errorUnavailable:"Instance not yet available",errorTimeout:"Timeout",errorUnknown:"Unknown error",notLoaded:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="?session">Click here</a> to initiate a new one.</p>'}},commandLineDialog:{title:"Command line"},linkDialog:{title:"Connect two devices",select:"Please select which ports to connect...",error:{loading:"Problem loading the interfaces for this device. Please, try it again.",unavailability:"One of the devices you are trying to link has no available interfaces.",creation:"Sorry, something went wrong during the link creation."}},creationDialog:{title:"Create new device",type:"Device type"},creationMenu:{legend:"To create a new device, drag it to the network map"},modificationDialog:{title:"Modify device",globalSettings:"Global Settings",interfaces:"Interfaces",defaultGW:"Default gateway",ipAddress:"IP address",subnetMask:"Subnet mask",noSettings:"No settings can be specified for this type of interface."}});