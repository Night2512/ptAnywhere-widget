/**
 * ptAnywhere - User friendly interface to use PT Anywhere.
 * @version v2.0.1
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
angular.module("ptAnywhere",[]),angular.module("ptAnywhere.api.http",["ptAnywhere"]).config(["$injector","$provide",function(e,t){var n=console,o="url",i="";try{e.get(o)}catch(a){n.log('Setting default value for non existing "'+o+'" constant: "'+i+'"'),t.constant(o,i)}}]).config(["$httpProvider",function(e){e.interceptors.push("HttpErrorsInterceptor")}]),angular.module("ptAnywhere.locale",[]).config(["$injector","$provide",function(e,t){$log=console;var n="locale_en";try{n=e.get("use")}catch(o){$log.debug("Locales to use were not defined: using default ones.")}var i;try{i=e.get(n),t.constant("locale",i),$log.debug("Locales loaded from: "+n)}catch(o){$log.error("Locales to use could not be loaded from constant:"+n+".")}}]),angular.module("ptAnywhere.locale").constant("locale_en",{loading:"Loading...",loadingInfo:"Loading info...",name:"Name",manipulationMenu:{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Device",addEdge:"Connect Devices",editNode:"Edit Device",addDescription:"Click in an empty space to place a new device.",edgeDescription:"Click on a node and drag the edge to another element to connect them.",editEdge:"Edit Edge",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},session:{creating:{title:"Creating new session..."},notFound:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="#/">Click here</a> to initiate a new one.</p>'},unavailable:{title:"Unavailable PT instances",content:'<p>Sorry, there are <b>no Packet Tracer instances available</b> right now to initiate a session.</p><p>Please, wait a little bit and <a href="#/">try again</a>.</p>'},genericError:{title:"Error creating PT instance",content:'<p>Sorry, there was an error initiating the session.</p><p>Please, wait a little bit and <a href="#/">try again</a>.</p>'}},network:{loading:"Loading network...",attempt:"Attempt",errorUnavailable:"Instance not yet available",errorTimeout:"Timeout",errorUnknown:"Unknown error",notLoaded:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="?session">Click here</a> to initiate a new one.</p>'}},deleteDevice:{status:"Deleting device...",error:"The device could not be deleted."},deleteLink:{status:"Deleting link...",error:"The link could not be deleted."},creationMenu:{legend:"To create a new device, drag it to the network map"},creationDialog:{title:"Create new device",type:"Device type"},linkDialog:{title:"Connect two devices",select:"Please select which ports to connect...",error:{loading:"Problem loading the interfaces for this device. Please, try it again.",unavailability:"One of the devices you are trying to link has no available interfaces.",creation:"Sorry, something went wrong during the link creation."}},modificationDialog:{title:"Modify device",globalSettings:"Global Settings",interfaces:"Interfaces",defaultGW:"Default gateway",ipAddress:"IP address",subnetMask:"Subnet mask",noSettings:"No settings can be specified for this type of interface."},commandLineDialog:{title:"Command line"}}),angular.module("ptAnywhere.widget",["ngRoute","ui.bootstrap","ptAnywhere","ptAnywhere.locale","ptAnywhere.api.http","ptAnywhere.widget.console","ptAnywhere.widget.create","ptAnywhere.widget.link","ptAnywhere.widget.map","ptAnywhere.widget.update"]).config(["$injector","$provide",function(e,t){var n={baseUrl:"",imagesUrl:""};for(var o in n)try{e.get(o)}catch(i){var a=n[o];$log.log('Setting default value for non existing "'+o+'" constant: "'+a+'"'),t.constant(o,a)}}]).config(["$routeProvider","locale",function(e,t){function n(e){return'<div class="row message"><div class="col-md-8 col-md-offset-2 text-center"><h1>'+e.title+"</h1>"+("content"in e?e.content:"")+"</div></div>"}e.when("/",{template:n(t.session.creating),controller:"SessionCreatorController"}).when("/session-unavailable",{template:n(t.session.unavailable)}).when("/session-error",{template:n(t.session.genericError)}).when("/not-found",{template:n(t.session.notFound)}).when("/loading/:id",{templateUrl:"loading.html"}).when("/s/:id",{templateUrl:"main-widget.html"}).otherwise("/")}]),angular.module("ptAnywhere.widget").directive("draggableDevice",["imagesUrl",function(e){function t(e){e.originalPosition={left:e.draggedSelector.css("left"),top:e.draggedSelector.css("top")},e.draggedSelector.draggable({helper:"clone",opacity:.4,start:function(t,n){e.draggedSelector.css({opacity:"0.7"})},stop:function(t,l){if(n(l.helper,e.dragToSelector)){var r=i(l),d=a(e.type,l.offset);e.onDrop({device:d})["finally"](function(){o(e),r.remove()})}else o(e)}})}function n(e,t){var n=t.offset().left,o=t.offset().top,i=t.outerHeight(!0),a=t.outerWidth(!0),l=o+i,r=n+a,d=e.offset().left,c=e.offset().top,s=e.outerHeight(!0),u=e.outerWidth(!0),p=c+s,g=d+u;return!(l<c||o>p||r<d||n>g)}function o(e){e.draggedSelector.animate({opacity:"1"},1e3,function(){e.draggedSelector.css({left:e.originalPosition.left,top:e.originalPosition.top})})}function i(e){var t=$('<img alt="Temporary image" src="'+e.helper.attr("src")+'">');t.css("width",e.helper.css("width"));var n=$('<div class="text-in-image"><span>Creating...</span></div>');return n.prepend(t),$("body").append(n),n.css({position:"absolute",left:e.offset.left,top:e.offset.top}),n}function a(e,t){var n=t.left,o=t.top;return{group:e,x:n,y:o}}return{restrict:"C",scope:{alt:"@",src:"@",dragTo:"@",type:"@",onDrop:"&"},template:'<img class="ui-draggable ui-draggable-handle" alt="{{ alt }}" ng-src="{{ path }}" />',link:function(n,o,i){n.path=e+"/"+n.src,n.draggedSelector=$("img",o),n.dragToSelector=$(n.dragTo),t(n)}}}]),angular.module("ptAnywhere.widget").directive("inputIpAddress",[function(){return{restrict:"C",transclude:!0,scope:{id:"@",name:"@",formController:"=",value:"=ngModel"},templateUrl:"input-ipaddress.html",link:function(e,t,n){e.ipAddrPattern=/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/}}}]),angular.module("ptAnywhere.widget").controller("SessionCreatorController",["$location","HttpApiService","fileToOpen",function(e,t,n){t.createSession(n,null).then(function(t){e.path("/loading/"+t)},function(t){503===t.status?e.path("/session-unavailable"):e.path("/session-error")})}]),angular.module("ptAnywhere.widget").controller("SessionLoadingController",["$location","$routeParams","HttpApiService","NetworkMapData","baseUrl","imagesUrl","locale",function(e,t,n,o,i,a,l){var r=this;r.path=a,r.loading=l.network.loading,r.message="",n.startSession(t.id),n.getNetwork(function(e){r.message=e}).then(function(n){o.load(n),e.path("/s/"+t.id)},function(t){e.path("/not-found")})}]),angular.module("ptAnywhere.widget").controller("WidgetController",["$q","$log","$location","$routeParams","$uibModal","NetworkMapData","HttpApiService",function(e,t,n,o,i,a,l){var r,d=this;a.isLoaded()?(d.openConsole=function(e){var t="console?endpoint="+e;r=i.open({templateUrl:"cmd-dialog.html",controller:"CommandLineController",resolve:{endpoint:function(){return t}},windowClass:"terminal-dialog"})},d.onAddDevice=function(e,t){r=i.open({templateUrl:"default-dialog.html",controller:"CreationController",resolve:{position:function(){return[e,t]}}}),r.result.then(function(e){a.addNode(e)})},d.onAddLink=function(e,t){r=i.open({templateUrl:"default-dialog.html",controller:"LinkController",resolve:{fromDevice:function(){return e},toDevice:function(){return t}}}),r.result.then(function(n){a.connect(e,t,n.newLink.id,n.newLink.url,n.fromPortName,n.toPortName)})},d.onEditDevice=function(e){r=i.open({templateUrl:"default-dialog.html",controller:"UpdateController",resolve:{device:function(){return e}}}),r.result.then(function(e){null!==e&&a.updateNode(e)})},d.onDeleteDevice=function(n){return e(function(e,o){l.removeDevice(n).then(function(){e()},function(e){t.error("Device removal.",e),o()})})},d.onDeleteLink=function(n){return e(function(e,o){l.removeLink(n).then(function(){e()},function(){t.error("Something went wrong in the link removal."),o()})})},d.onDrop=function(n){return e(function(e,o){var i=d.getNetworkCoordinates(n.x,n.y);n.x=i.x,n.y=i.y,l.addDevice(n).then(function(t){a.addNode(t),e()},function(e){t.error("Device creation",e),o()})})}):n.path("/loading/"+o.id)}]),angular.module("ptAnywhere.api.http").factory("HttpApiService",["$http","url","HttpRetryService",function(e,t,n){var o="",i={timeout:2e3},a={timeout:5e3};return{createSession:function(n,a){var l={fileUrl:n};return null!==a&&(l.sameUserAsInSession=a),e.post(t+"/sessions",l,i).then(function(e){o=e.data;var t=e.data.split("/"),n=t[t.length-1];return n})},startSession:function(e){o=t+"/sessions/"+e},getNetwork:function(t){var i=function(e){return e.data};return n.setSuccess(i),n.setExplainer(t),e.get(o+"/network",a).then(i,n.responseError)},addDevice:function(t){return e.post(o+"/devices",t,i).then(function(e){return e.data})},removeDevice:function(t){return e["delete"](t.url,i)},modifyDevice:function(t,n,o){var a={label:n};return""!==o&&(a.defaultGateway=o),e.put(t.url,a,i).then(function(e){var t=e.data;return t.defaultGateway=o,t})},modifyPort:function(t,n,o){var a={portIpAddress:n,portSubnetMask:o};return e.put(t,a,i).then(function(e){return e.data})},getAllPorts:function(t){return e.get(t.url+"ports",i).then(function(e){return e.data})},getAvailablePorts:function(t){return e.get(t.url+"ports?free=true",i).then(function(e){return e.data})},createLink:function(t,n){var o={toPort:n};return e.post(t+"link",o,i).then(function(e){return e.data})},removeLink:function(t){return e.get(t.url,i).then(function(t){return e["delete"](t.data.endpoints[0]+"link")})}}}]),angular.module("ptAnywhere.api.http").factory("HttpErrorsInterceptor",["$q","$location",function(e,t){return{responseError:function(n){return 410===n.status&&t.path("/not-found"),e.reject(n)}}}]),angular.module("ptAnywhere.api.http").factory("HttpRetryService",["$http","$q","$timeout","$location","locale",function(e,t,n,o,i){function a(t,o){return n(function(){return e(t).then(s,r)},o)}function l(e){var t;switch(e){case 503:t=i.network.errorUnavailable;break;case 0:t=i.network.errorTimeout;break;default:t=i.network.errorUnknown}return t+". "+i.network.attempt+" "+d+"/"+c+"."}function r(e){if((0===e.status||503===e.status)&&d<c){var n=0===e.status?0:2e3;return d++,u(l(e.status)),a(e.config,n)}return t.reject(e)}var d=0,c=5,s=null,u=null;return{responseError:r,setSuccess:function(e){s=e},setExplainer:function(e){u=e}}}]),angular.module("ptAnywhere.widget.console",["ui.bootstrap","ptAnywhere.locale"]),angular.module("ptAnywhere.widget.console").controller("CommandLineController",["$scope","$uibModalInstance","locale","endpoint",function(e,t,n,o){e.title=n.commandLineDialog.title,e.endpoint=o,e.close=function(){t.dismiss("cancel")}}]),angular.module("ptAnywhere.widget.create",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http"]),angular.module("ptAnywhere.widget.create").controller("CreationController",["$log","$scope","$uibModalInstance","locale","HttpApiService","position",function(e,t,n,o,i,a){t.submitError=null,t.locale=o,t.modal={id:"creationDialog",title:o.creationDialog.title,bodyTemplate:"creation-dialog-body.html",hasSubmit:!0},t.deviceTypes=[{value:"cloud",label:"Cloud"},{value:"router",label:"Router"},{value:"switch",label:"Switch"},{value:"pc",label:"PC"}],t.newDevice={name:"",type:t.deviceTypes[0]},t.submit=function(){var o={group:t.newDevice.type.value,x:a[0],y:a[1]};""!==t.newDevice.name&&(o.label=t.newDevice.name),t.submitError=null,i.addDevice(o).then(function(e){n.close(e)},function(n){var o=n.status===-1?"timeout":n.statusText;t.submitError="Device could not be created ("+o+").",e.error("Device creation",n)})},t.close=function(){n.dismiss("cancel")}}]),angular.module("ptAnywhere.widget.link",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http"]),angular.module("ptAnywhere.widget.link").controller("LinkController",["$log","$scope","$uibModalInstance","locale","HttpApiService","fromDevice","toDevice",function(e,t,n,o,i,a,l){var r=this;t.fromDeviceName=a.label,t.toDeviceName=l.label,t.fromInterfaces=null,t.toInterfaces=null,t.submitError=null,t.loadError=null,t.locale=o,t.modal={id:"linkDialog",title:o.linkDialog.title,bodyTemplate:"link-dialog-body.html",hasSubmit:!1},t.selected={fromIface:null,toIface:null},r._load=function(){if(null!==a&&null!==l){var o=[i.getAvailablePorts(a),i.getAvailablePorts(l)];Promise.all(o).then(function(e){t.fromInterfaces=e[0],t.toInterfaces=e[1],t.emptyInterfaces()||(t.selected.fromIface=t.fromInterfaces[0],t.selected.toIface=t.toInterfaces[0],t.modal.hasSubmit=!0),t.$$phase||t.$apply()},function(o){e.error("Interfaces to be linked could not be loaded.",o),410===o.status?n.dismiss("cancel"):(t.loadError="(error code: "+o.status+")",t.$$phase||t.$apply())})}},t.isLoadingInterfaces=function(){return null===t.fromInterfaces&&null===t.toInterfaces},t.emptyInterfaces=function(){return 0===t.fromInterfaces.length||0===t.toInterfaces.length},t.availableInterfaces=function(){return!t.isLoadingInterfaces()&&!t.emptyInterfaces()},t.submit=function(){var o=t.selected.fromIface,a=t.selected.toIface;t.submitError=null,i.createLink(o.url,a.url).then(function(e){var t={newLink:e,fromPortName:o.portName,toPortName:a.portName};n.close(t)},function(n){t.submitError="Link could not be created ("+n.statusText+").",e.error("Link creation",n)})},t.close=function(){n.dismiss("cancel")},r._load()}]),angular.module("ptAnywhere.widget.map",["ui.bootstrap","ptAnywhere.locale","ptAnywhere.api.http"]),angular.module("ptAnywhere.widget.map").directive("networkMap",["locale","NetworkMapData","imagesUrl",function(e,t,n){function o(n,o,i,a){var l={nodes:t.getNodes(),edges:t.getEdges()},r={nodes:{physics:!1,font:"14px verdana black"},edges:{width:3,selectionWidth:1.4,color:{color:"#606060",highlight:"#000000",hover:"#000000"}},groups:{cloudDevice:{shape:"image",image:i+"/cloud.png",size:50},routerDevice:{shape:"image",image:i+"/router_cropped.png",size:45},switchDevice:{shape:"image",image:i+"/switch_cropped.png",size:35},pcDevice:{shape:"image",image:i+"/pc_cropped.png",size:45}},manipulation:f(n,a),locale:"ptAnywhere",locales:{ptAnywhere:e.manipulationMenu}};return new vis.Network(o,l,r)}function i(){var e=m.getSelection();return 1!==e.nodes.length?(console.log("Only one device is supposed to be selected. Instead "+e.nodes.length+" are selected."),null):t.getNode(e.nodes[0])}function a(e){return 0===e.nodes.length&&1===e.edges.length}function l(e){return e.nodes.length>0}function r(e){return e.label.indexOf("\n")!==-1}function d(e){var n=t.getNode(e.from),o=t.getNode(e.to);r(n)||(n.label=n.label+"\n("+e.fromLabel+")",t.updateNode(n)),r(o)||(o.label=o.label+"\n("+e.toLabel+")",t.updateNode(o))}function c(e){var n=t.getNode(e.from),o=t.getNode(e.to);r(n)&&(n.label=n.label.split("\n")[0],t.updateNode(n)),r(o)&&(o.label=o.label.split("\n")[0],t.updateNode(o))}function s(e){for(var n=0;n<e.edges.length;n++)c(t.getEdge(e.edges[n]))}function u(e,t){return m.DOMtoCanvas({x:e,y:t})}function p(e){$("div.vis-manipulation").append('<div class="statusMsg vis-button vis-none"><div class="vis-label text-warning">'+e+"</p></div>"),$("div.statusMsg").fadeIn("slow")}function g(e){$("div.vis-manipulation").append('<div class="statusMsg vis-button vis-none"><div class="vis-label text-danger">'+e+"</p></div>"),$("div.statusMsg").fadeIn("slow").delay(2e3).fadeOut("slow")}function f(e,n){var o=function(e,t){},i=o,a=o,l=o,r=o,d=o;return"onAddDevice"in e&&(i=function(t,n){e.onAddDevice({x:t.x,y:t.y})}),"onAddLink"in e&&(a=function(n,o){var i=t.getNode(n.from),a=t.getNode(n.to);e.onAddLink({fromDevice:i,toDevice:a})}),"onEditDevice"in e&&(l=function(n,o){e.onEditDevice({device:t.getNode(n.id)}),o(n)}),"onDeleteDevice"in e&&(r=function(o,i){p(n.deleteDevice.status),e.onDeleteDevice({device:t.getNode(o.nodes[0])}).then(function(){i(o)},function(){i([]),g(n.deleteDevice.error)})}),"onDeleteLink"in e&&(d=function(o,i){p(n.deleteLink.status);var a=t.getEdge(o.edges[0]);c(a),e.onDeleteLink({link:a}).then(function(){i(o)},function(){i([]),g(n.deleteLink.error)})}),{initiallyActive:!0,addNode:i,addEdge:a,editNode:l,editEdge:!1,deleteNode:r,deleteEdge:d}}var m;return{restrict:"C",scope:{onDoubleClick:"&",onAddDevice:"&",onAddLink:"&",onEditDevice:"&",onDeleteDevice:"&",onDeleteLink:"&",adaptCoordinates:"="},template:'<div class="map"></div>',link:function(r,c,p){var g=c.find("div")[0];m=o(r,g,n,e),r.$on("$destroy",function(){m.destroy()}),r.adaptCoordinates=u,m.on("select",function(e){if(a(e)){var n=t.getEdge(e.edges[0]);d(n)}else l(e)&&s(e)}),m.on("deselectEdge",function(e){a(e.previousSelection)&&s(e.previousSelection)}),"onDoubleClick"in r&&m.on("doubleClick",function(){var e=i();null!==e&&r.onDoubleClick({endpoint:e.consoleEndpoint})})}}}]),angular.module("ptAnywhere.widget.map").factory("NetworkMapData",[function(){var e=!1,t=new vis.DataSet,n=new vis.DataSet;return{load:function(o){e=!0,null!==o.devices&&(t.clear(),t.add(o.devices)),null!==o.edges&&(n.clear(),n.add(o.edges))},isLoaded:function(){return e},getNode:function(e){return t.get(e)},updateNode:function(e){t.update(e)},addNode:function(e){return t.add(e)},getNodes:function(){return t},getEdge:function(e){return n.get(e)},getEdges:function(){return n},connect:function(e,t,o,i,a,l){var r;r="string"==typeof e&&"string"==typeof t?{from:getByName(e).id,to:getByName(t).id}:{from:e.id,to:t.id},void 0!==o&&(r.id=o),void 0!==i&&(r.url=i),void 0!==a&&(r.fromLabel=a),void 0!==l&&(r.toLabel=l),n.add(r)}}}]),angular.module("ptAnywhere.widget.update",["ptAnywhere.locale","ptAnywhere.widget"]),angular.module("ptAnywhere.widget.update").controller("UpdateController",["$log","$scope","$uibModalInstance","locale","HttpApiService","device",function(e,t,n,o,i,a){var l=this;t.submitError=null,t.interfaces=null,t["interface"]={selected:null,ipAddr:null,subnet:null},t.locale=o,t.modal={id:"modification-dialog",title:o.modificationDialog.title,bodyTemplate:"update-dialog-body.html",hasSubmit:!0},t.device={name:a.label,defaultGateway:"defaultGateway"in a?a.defaultGateway:null},t.$watch("interfaces",function(e,n){null!==e&&(t["interface"].selected=e[0])}),t.$watch("interface.selected",function(e,n){e&&"portIpAddress"in e&&"portSubnetMask"in e?(t["interface"].ipAddr=e.portIpAddress,t["interface"].subnet=e.portSubnetMask):(t["interface"].ipAddr=null,t["interface"].subnet=null)}),l._load=function(){i.getAllPorts(a).then(function(e){t.interfaces=e,t.$$phase||t.$apply()},function(t){e.error("Ports for the device "+a.id+" could not be loaded.",t),n.dismiss("cancel")})},l._haveGlobalSettingsChanged=function(){return t.device.name!=a.label||"defaultGateway"in a&&t.device.defaultGateway!=a.defaultGateway},l._hasInterfaceChanged=function(){return null!==t["interface"].ipAddr&&null!==t["interface"].subnet&&(t["interface"].ipAddr!=t["interface"].selected.portIpAddress||t["interface"].subnet!=t["interface"].selected.portSubnetMask)},t.submit=function(){var o;o=l._haveGlobalSettingsChanged()?i.modifyDevice(a,t.device.name,t.device.defaultGateway).then(function(e){return e},function(e){return t.submitError="Global settings could not be modified.",e}):Promise.resolve(null),l._hasInterfaceChanged()&&(o=o.then(function(e){return i.modifyPort(t["interface"].selected.url,t["interface"].ipAddr,t["interface"].subnet).then(function(t){return e},function(e){return t.submitError="Interface details could not be modified.",e})})),o.then(function(e){n.close(e)},function(t){e.error("Update(s) could not be performed.",t)})},t.close=function(){n.dismiss("cancel")},l._load()}]),angular.module("ptAnywhere").run(["$templateCache",function(e){e.put("cmd-dialog.html",'<div class="modal-header" style="height: 10%;">\n    <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n    <h4 class="modal-title" id="cmdModal">\n        <span class="glyphicon glyphicon-console" style="margin-right:10px" aria-hidden="true"></span>\n        {{ title }}\n    </h4>\n</div>\n<div class="modal-body" style="height: 89%;">\n    <div class="iframeWrapper">\n        <iframe class="terminal" src="{{ endpoint }}"></iframe>\n    </div>\n</div>'),e.put("creation-dialog-body.html",'<fieldset>\n    <div class="clearfix form-group">\n        <label for="{{ modal.id }}Name" class="control-label">{{ locale.name }}</label>\n        <input type="text" id="{{ modal.id }}Name" class="form-control input-lg" ng-model="newDevice.name" />\n    </div>\n    <div class="clearfix form-group">\n        <label for="{{ modal.id }}Type" class="control-label">{{ locale.creationDialog.type }}</label>\n        <p ng-if="deviceTypes === null">{{ locale.loading }}</p>\n        <div ng-if="deviceTypes !== null">\n            <select id="{{ modal.id }}Type" class="form-control input-lg"\n                    ng-model="newDevice.type" ng-options="type.label for type in deviceTypes">\n            </select>\n        </div>\n    </div>\n</fieldset>'),e.put("default-dialog.html",'<form name="dialogForm">\n    <div class="modal-header">\n        <button type="button" class="close" ng-click="close()"><span aria-hidden="true">&times;</span></button>\n        <h4 class="modal-title" id="{{ modal.id }}Label">{{ modal.title }}</h4>\n    </div>\n    <div class="modal-body">\n        <div ng-include="modal.bodyTemplate"></div>\n        <p ng-if="submitError !== null" class="clearfix bg-danger">{{ submitError }}</p>\n    </div>\n    <div class="modal-footer">\n        <button ng-click="close()" type="button" class="btn btn-default btn-lg" data-dismiss="modal">Close</button>\n        <button ng-show="modal.hasSubmit" ng-disabled="dialogForm.$invalid" ng-click="submit()" type="button" class="btn btn-primary btn-lg">Submit</button>\n    </div>\n</form>'),e.put("input-ipaddress.html",'<div class="clearfix form-group has-feedback" ng-class="{\'has-error\': formController.$invalid}">\n    <label for="{{ id }}" class="control-label"><span ng-transclude></span></label>\n    <input type="text" ng-pattern="ipAddrPattern" ng-model="value"\n           name="{{ name }}" id="{{ id }}" class="form-control input-lg" aria-describedby="{{ id }}-error" >\n    <span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true" ng-show="formController.$invalid"></span>\n    <span id="{{ id }}-error" class="sr-only">(error)</span>\n</div>'),e.put("link-dialog-body.html",'<div ng-show="isLoadingInterfaces() && loadError === null">{{ locale.loadingInfo }}</div>\n<div ng-show="!isLoadingInterfaces()">\n    <div ng-show="availableInterfaces()">\n        <p>{{ locale.linkDialog.select }}</p>\n        <div class="clearfix form-group">\n            <label for="{{modal.id}}FromIface" class="col-md-3 fromDeviceName">{{ fromDeviceName }}</label>\n            <div class="col-md-9" ng-if="fromInterfaces !== null">\n                <select id="{{modal.id}}FromIface" class="form-control input-lg" size="1"\n                        ng-model="selected.fromIface" ng-options="iface.portName for iface in fromInterfaces">\n                </select>\n            </div>\n        </div>\n        <div class="clearfix form-group">\n            <label for="{{modal.id}}ToIface" class="col-md-3 toDeviceName">{{ toDeviceName }}</label>\n            <div class="col-md-9" ng-if="toInterfaces !== null">\n                <select id="{{modal.id}}ToIface" class="form-control input-lg" size="1"\n                        ng-model="selected.toIface" ng-options="iface.portName for iface in toInterfaces">\n                </select>\n            </div>\n        </div>\n    </div>\n    <div ng-show="!availableInterfaces()">\n        <p>{{ locale.linkDialog.error.unavailability }}</p>\n    </div>\n</div>\n<div ng-show="loadError !== null">\n    <p>{{ locale.linkDialog.error.loading }}</p>\n    <p>{{ loadError }}</p>\n</div>'),e.put("loading.html",'<div class="loading" ng-controller="SessionLoadingController as loading">\n    <img class="loading-icon" ng-src="{{ loading.path }}/loading.gif" alt="Loading network topology..." />\n    <p>{{ loading.loading }}</p>\n    <p>{{ loading.message }}</p>\n</div>'),e.put("main-widget.html",'<div ng-controller="WidgetController as widget">\n    <div class="network networkMap"\n         on-double-click="widget.openConsole(endpoint)"\n         on-add-device="widget.onAddDevice(x, y)"\n         on-add-link="widget.onAddLink(fromDevice, toDevice)"\n         on-edit-device="widget.onEditDevice(device)"\n         on-delete-device="widget.onDeleteDevice(device)"\n         on-delete-link="widget.onDeleteLink(link)"\n         adapt-coordinates="widget.getNetworkCoordinates"\n    ></div>\n    <div class="creation-menu">\n        <fieldset>\n            <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 col-xs-12">\n                <div class="row">\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="cloud" src="cloud.png"\n                             drag-to=".map" type="cloud" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Cloud</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="router" src="router.png"\n                             drag-to=".map" type="router" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Router</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="switch" src="switch.png"\n                             drag-to=".map" type="switch" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Switch</figcaption>\n                    </figure>\n                    <figure class="col-md-3 col-sm-3 col-xs-3 text-center">\n                        <div class="draggableDevice" alt="pc" src="pc.png"\n                             drag-to=".map" type="pc" on-drop="widget.onDrop(device)"></div>\n                        <figcaption>Pc</figcaption>\n                    </figure>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>'),e.put("update-dialog-body.html",'<uib-tabset justified="true">\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.globalSettings }}</uib-tab-heading>\n        <div class="clearfix form-group">\n            <label for="{{ modal.id }}-name">{{ locale.name }}</label>\n            <input type="text" ng-model="device.name" id="{{ modal.id }}-name" class="form-control input-lg" />\n        </div>\n        <div class="inputIpAddress" ng-show="device.defaultGateway !== null"\n             id="{{ modal.id }}-default-gw" name="defaultgw"\n             ng-model="device.defaultGateway" form-controller="dialogForm.defaultgw">\n            {{ locale.modificationDialog.defaultGW }}\n        </div>\n    </uib-tab>\n    <uib-tab>\n        <uib-tab-heading>{{ locale.modificationDialog.interfaces }}</uib-tab-heading>\n        <div ng-show="interfaces === null">{{ locale.loadingInfo }}</div>\n        <div ng-show="interfaces !== null">\n            <div class="clearfix form-group">\n                <label for="{{ modal.id }}-ifaces" class="control-label">{{ locale.name }}</label>\n                <select id="{{ modal.id }}-ifaces" class="form-control input-lg" size="1"\n                        ng-model="interface.selected" ng-options="iface.portName for iface in interfaces">\n                </select>\n            </div>\n            <hr />\n            <div class="clearfix form-group" ng-show="interface.ipAddr !== null">\n                <div class="inputIpAddress" id="{{ modal.id }}-ipaddr" name="ipaddr"\n                     ng-model="interface.ipAddr" form-controller="dialogForm.ipaddr">\n                    {{ locale.modificationDialog.ipAddress }}\n                </div>\n                <div class="inputIpAddress" id="{{ modal.id }}-subnet" name="subnet"\n                     ng-model="interface.subnet" form-controller="dialogForm.subnet">\n                    {{ locale.modificationDialog.subnetMask }}\n                </div>\n            </div>\n            <div class="clearfix form-group" ng-show="interface.ipAddr === null">\n                <p class="col-md-12">{{ locale.modificationDialog.noSettings }}</p>\n            </div>\n        </div>\n    </uib-tab>\n</uib-tabset>\n')}]);