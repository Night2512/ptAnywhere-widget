/**
 * ptAnywhere - User friendly interface to use PT Anywhere.
 * @version v2.0.1
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
angular.module("ptAnywhere",["ngRoute"]).config(["$injector","$provide",function(e,n){var t={baseUrl:"",apiUrl:""};for(var o in t)try{e.get(o)}catch(i){console.log('Setting default value for non existing "baseUrl" constant: "'+t[o]+'"'),n.constant(o,t[o])}}]).config(["$routeProvider","baseUrl",function(e,n){e.when("/",{template:"",controller:"SessionCreatorController"}).when("/not-found",{templateUrl:n+"/html/not-found.html"}).when("/loading/:id",{templateUrl:n+"/html/loading.html"}).when("/s/:id",{templateUrl:n+"/html/main-widget.html"}).otherwise("/")}]),angular.module("ptAnywhere").controller("SessionCreatorController",["$location","PTAnywhereAPIService","fileToOpen",function(e,n,t){n.createSession(t,null).then(function(n){e.path("/loading/"+n)})}]).controller("SessionLoadingController",["$location","$routeParams","PTAnywhereAPIService","NetworkMapData","baseUrl","locale_en",function(e,n,t,o,i,r){var a=this;a.baseUrl=i,a.loading=r.network.loading,a.message="",t.startSession(n.id),t.getNetwork(function(e){a.message=e}).then(function(t){o.load(t),e.path("/s/"+n.id)},function(n){e.path("/not-found")})}]).controller("WidgetController",["$location","$routeParams","baseUrl","NetworkMapData",function(e,n,t,o){var i=this;o.isLoaded()?i.iconsPath=t+"/images/":e.path("/loading/"+n.id),i.openConsole=function(e){var n="console?endpoint="+e;i.openCmdModal(n)},i.onAddDevice=function(e,n){},i.onAddLink=function(e,n){i.openAddLinkModal(e,n,function(t,i,r){o.connect(e,n,t.id,t.url,i,r)})},i.onEditDevice=function(e){},i.onDeleteDevice=function(e){},i.onDeleteLink=function(e){}}]),angular.module("ptAnywhere").factory("PTAnywhereAPIService",["$http","apiUrl","HttpRetry",function(e,n,t){var o="";return{createSession:function(t,i){var r={fileUrl:t};return null!==i&&(r.sameUserAsInSession=i),e.post(n+"/sessions",r,{timeout:1e4}).then(function(e){o=e.data;var n=e.data.split("/"),t=n[n.length-1];return t})},startSession:function(e){o=n+"/sessions/"+e},getNetwork:function(n){var i=function(e){return e.data};return t.setSuccess(i),t.setExplainer(n),e.get(o+"/network",{timeout:2e3}).then(i,t.responseError)},getAvailablePorts:function(n){return e.get(n.url+"ports?free=true").then(function(e){return e.data})}}}]).factory("HttpRetry",["$http","$q","$timeout","$location","locale_en",function(e,n,t,o,i){function r(n,o){return t(function(){return e(n).then(s,l)},o)}function a(e){var n;switch(e){case 503:n=i.network.errorUnavailable;break;case 0:n=i.network.errorTimeout;break;default:n=i.network.errorUnknown}return n+". "+i.network.attempt+" "+c+"/"+d+"."}function l(e){if((0===e.status||503===e.status)&&c<d){var t=0===e.status?0:2e3;return c++,u(a(e.status)),r(e.config,t)}return n.reject(e)}var c=0,d=5,s=null,u=null;return{responseError:l,setSuccess:function(e){s=e},setExplainer:function(e){u=e}}}]).factory("HttpErrorsInterceptor",["$q","$location",function(e,n){return{responseError:function(t){return 404!==t.status&&410!==t.status||n.path("/not-found"),e.reject(t)}}}]),angular.module("ptAnywhere").directive("cmdDialog",["locale_en","baseUrl",function(e,n){return{restrict:"C",scope:{open:"=",backdrop:"@"},templateUrl:n+"/html/cmd-dialog.html",link:function(n,t,o){var i=$(t.find("div")[0]),r={backdrop:"backdrop"in n&&"true"===n.backdrop};n.title=e.commandLineDialog.title,n.open=function(e){var n=$("iframe.terminal",i);n.attr("src",e),n.on("load",function(){console.log("LOADED"),i.modal(r),i.modal("show")})}}}}]),angular.module("ptAnywhere").directive("networkMap",["locale_en","baseUrl","NetworkMapData",function(e,n,t){function o(){var e=u.getSelection();return 1!==e.nodes.length?(console.log("Only one device is supposed to be selected. Instead "+e.nodes.length+" are selected."),null):t.getNode(e.nodes[0])}function i(e){return 0===e.nodes.length&&1===e.edges.length}function r(e){return e.nodes.length>0}function a(e){return e.label.indexOf("\n")!==-1}function l(e){var n=t.getNode(e.from),o=t.getNode(e.to);a(n)||(n.label=n.label+"\n("+e.fromLabel+")",t.updateNode(n)),a(o)||(o.label=o.label+"\n("+e.toLabel+")",t.updateNode(o))}function c(e){var n=t.getNode(e.from),o=t.getNode(e.to);a(n)&&(n.label=n.label.split("\n")[0],t.updateNode(n)),a(o)&&(o.label=o.label.split("\n")[0],t.updateNode(o))}function d(e){for(var n=0;n<e.edges.length;n++)c(t.getEdge(e.edges[n]))}function s(e){var n=function(e,n){},o=n,i=n,r=n,a=n,l=n;return"onAddDevice"in e&&(o=function(n,t){e.onAddDevice(n.x,n.y)}),"onAddLink"in e&&(i=function(n,o){var i=t.getNode(n.from),r=t.getNode(n.to);e.onAddLink({fromDevice:i,toDevice:r})}),"onEditDevice"in e&&(r=function(n,o){e.onEditDevice(t.getNode(n.id)),o(n)}),"onDeleteDevice"in e&&(a=function(n,o){e.onDeleteDevice(t.getNode(n.nodes[0])),o(n)}),"onDeleteLink"in e&&(l=function(n,o){var i=t.getEdge(n.edges[0]);c(i),e.onDeleteLink(i),o(n)}),{initiallyActive:!0,addNode:o,addEdge:i,editNode:r,editEdge:!1,deleteNode:a,deleteEdge:l}}var u;return{restrict:"C",scope:{iconsSrc:"@",onDoubleClick:"&",onAddDevice:"&",onAddLink:"&",onEditDevice:"&",onDeleteDevice:"&",onDeleteLink:"&"},template:'<div class="map"></div>',link:function(n,a,c){var f={nodes:t.getNodes(),edges:t.getEdges()},g={nodes:{physics:!1,font:"14px verdana black"},edges:{width:3,selectionWidth:1.4,color:{color:"#606060",highlight:"#000000",hover:"#000000"}},groups:{cloudDevice:{shape:"image",image:n.iconsSrc+"cloud.png",size:50},routerDevice:{shape:"image",image:n.iconsSrc+"router_cropped.png",size:45},switchDevice:{shape:"image",image:n.iconsSrc+"switch_cropped.png",size:35},pcDevice:{shape:"image",image:n.iconsSrc+"pc_cropped.png",size:45}},manipulation:s(n),locale:"ptAnywhere",locales:{ptAnywhere:e.manipulationMenu}},p=a.find("div")[0];u=new vis.Network(p,f,g),u.on("select",function(e){if(i(e)){var n=edges.get(e.edges[0]);l(n)}else r(e)&&d(e)}),u.on("deselectEdge",function(e){i(e.previousSelection)&&d(e.previousSelection)}),"onDoubleClick"in n&&u.on("doubleClick",function(){var e=o();null!==e&&n.onDoubleClick({endpoint:e.consoleEndpoint})})}}}]),angular.module("ptAnywhere").factory("NetworkMapData",[function(){var e=!1,n=new vis.DataSet,t=new vis.DataSet;return{load:function(o){e=!0,null!==o.devices&&(n.clear(),n.add(o.devices)),null!==o.edges&&(t.clear(),t.add(o.edges))},isLoaded:function(){return e},getNode:function(e){return n.get(e)},updateNode:function(e){n.update(e)},getNodes:function(){return n},getEdge:function(e){return t.get(e)},getEdges:function(){return t},connect:function(e,n,o,i,r,a){var l;l="string"==typeof e&&"string"==typeof n?{from:getByName(e).id,to:getByName(n).id}:{from:e.id,to:n.id},void 0!==o&&(l.id=o),void 0!==i&&(l.url=i),void 0!==r&&(l.fromLabel=r),void 0!==a&&(l.toLabel=a),t.add(l)}}}]),angular.module("ptAnywhere").controller("LinkController",["$scope","baseUrl","PTAnywhereAPIService","NetworkMapData",function(e,n,t,o){var i=this;i.fromDevice=null,i.toDevice=null,i.fromInterfaces=null,i.toInterfaces=null,i.selectedFromIface=null,i.selectedToIface=null,i.load=function(){if(null!==i.fromDevice&&null!==i.toDevice){var n=[t.getAvailablePorts(i.fromDevice),t.getAvailablePorts(i.toDevice)];Promise.all(n).then(function(n){i.fromInterfaces=n[0],i.toInterfaces=n[1],e.$$phase||e.$apply()},function(){console.error("Not loaded!")})}},i.submit=function(){console.log("BLAH",i.selectedFromIface,i.selectedToIface)}}]),angular.module("ptAnywhere").directive("linkDialog",["locale_en","baseUrl",function(e,n){function t(e,n,t){e.fromDevice=n,e.toDevice=t,e.fromDeviceName=null===n?"Device 1":n.label,e.toDeviceName=null===t?"Device 2":t.label}function o(o){o.locale=e,o.modal={id:"linkDialog",title:e.linkDialog.title,bodyTemplate:n+"/html/link-dialog-body.html",hasSubmit:!1},o.show={loading:!0,loaded:!1,error:!1},o.errorMsg="",o.selectedFromIface=null,o.selectedToIface=null,t(o,null,null)}function i(e){e.show.loading=!1,e.show.loaded=!0,e.show.error=!1,e.modal.hasSubmit=!0}function r(e){e.show.loading=!1,e.show.loaded=!1,e.show.error=!0,e.modal.hasSubmit=!1}return{restrict:"C",scope:{open:"=",backdrop:"@",init:"&",fromDevice:"=",toDevice:"=",fromIfaces:"=",fromIface:"=",toIfaces:"=",toIface:"=",onSubmit:"&"},templateUrl:n+"/html/default-dialog.html",link:function(e,n,a){o(e);var l=$(n.find("div")[0]),c={backdrop:"backdrop"in e&&"true"===e.backdrop};e.open=function(n,o){t(e,n,o),e.$$phase||e.$apply(),i(e),e.init(),l.modal(c),l.modal("show")},e.$watchGroup(["fromIfaces","toIfaces"],function(n,t){for(var o in n)null!==n[o]&&0===n[o].length&&r(e)})}}}]),angular.module("ptAnywhere").value("locale_en",{loading:"Loading...",loadingInfo:"Loading info...",name:"Name",manipulationMenu:{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Device",addEdge:"Connect Devices",editNode:"Edit Device",addDescription:"Click in an empty space to place a new device.",edgeDescription:"Click on a node and drag the edge to another element to connect them.",editEdge:"Edit Edge",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},session:{creating:{title:"Creating new session...",content:""},unavailable:{title:"Unavailable PT instances",content:"<p>Sorry, there are <b>no Packet Tracer instances available</b> right now to initiate a session.</p><p>Please, wait a little bit and <b>try again</b>.</p>"}},network:{loading:"Loading network...",attempt:"Attempt",errorUnavailable:"Instance not yet available",errorTimeout:"Timeout",errorUnknown:"Unknown error",notLoaded:{title:"Topology not found",content:'<p>The topology could not be loaded probably because the session does not exist (e.g., if it has expired).</p><p><a href="?session">Click here</a> to initiate a new one.</p>'}},commandLineDialog:{title:"Command line"},linkDialog:{title:"Connect two devices",select:"Please select which ports to connect...",error:"Sorry, something went wrong during the link creation."},creationDialog:{title:"Create new device",type:"Device type"},creationMenu:{legend:"To create a new device, drag it to the network map"},modificationDialog:{title:"Modify device",globalSettings:"Global Settings",interfaces:"Interfaces",defaultGW:"Default gateway",ipAddress:"IP address",subnetMask:"Subnet mask",noSettings:"No settings can be specified for this type of interface."}});